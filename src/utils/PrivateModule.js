const privateModule = {
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_avatar",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_semaphore",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_groupId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guard_",
          "type": "address"
        }
      ],
      "name": "NotIERC165Compliant",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SignerAddFailed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousAvatar",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAvatar",
          "type": "address"
        }
      ],
      "name": "AvatarSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "guard",
          "type": "address"
        }
      ],
      "name": "ChangedGuard",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "NewTxn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "identityCommitment",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "username",
          "type": "bytes32"
        }
      ],
      "name": "NewUser",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousTarget",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newTarget",
          "type": "address"
        }
      ],
      "name": "TargetSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "initiator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "avatar",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "ZkSigModuleSetup",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "avatar",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "enum Enum.Operation",
          "name": "operation",
          "type": "uint8"
        },
        {
          "internalType": "uint256[]",
          "name": "merkleTreeRoots",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "nullifierHashes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[8][]",
          "name": "proofs",
          "type": "uint256[8][]"
        },
        {
          "internalType": "bytes32[]",
          "name": "votes",
          "type": "bytes32[]"
        }
      ],
      "name": "executeTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGuard",
      "outputs": [
        {
          "internalType": "address",
          "name": "_guard",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "groupId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "guard",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "identityCommitment",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "username",
          "type": "bytes32"
        }
      ],
      "name": "joinAsSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "safe",
      "outputs": [
        {
          "internalType": "contract GnosisSafe",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "semaphore",
      "outputs": [
        {
          "internalType": "contract ISemaphore",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_avatar",
          "type": "address"
        }
      ],
      "name": "setAvatar",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_guard",
          "type": "address"
        }
      ],
      "name": "setGuard",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        }
      ],
      "name": "setTarget",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "initParams",
          "type": "bytes"
        }
      ],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "target",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162001f4638038062001f468339810160408190526200003491620008c0565b6001606855604080516001600160a01b038781166020830152868116828401819052868216606080850191909152845180850390910181526080909301909352606980549186166001600160a01b0319928316179055606a8054909116909217909155620000a1620001c5565b606b829055606a5460408051631cea46b760e31b815290516001600160a01b039092169163e75235b891600480820192602092909190829003018186803b158015620000ec57600080fd5b505afa15801562000101573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000127919062000a07565b606c556000606d819055606954606b5460405163059f1bb560e01b815260048101919091526014602482015260448101929092523060648301526001600160a01b03169063059f1bb590608401600060405180830381600087803b1580156200018f57600080fd5b505af1158015620001a4573d6000803e3d6000fd5b50505050620001b981620002cd60201b60201c565b50505050505062000a74565b606a546040805163a0e67e2b60e01b815290516000926001600160a01b03169163a0e67e2b9160048083019286929190829003018186803b1580156200020a57600080fd5b505afa1580156200021f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000249919081019062000933565b805190915060005b81811015620002c8576001606f60008584815181106200028157634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580620002bf8162000a20565b91505062000251565b505050565b600080600083806020019051810190620002e891906200086d565b91945092509050620002f96200041b565b6001600160a01b038216620003555760405162461bcd60e51b815260206004820152601e60248201527f4176617461722063616e206e6f74206265207a65726f2061646472657373000060448201526064015b60405180910390fd5b6001600160a01b038116620003ad5760405162461bcd60e51b815260206004820152601e60248201527f5461726765742063616e206e6f74206265207a65726f2061646472657373000060448201526064016200034c565b620003b882620004d6565b620003c38162000573565b620003ce8362000610565b6040516001600160a01b038281168252808416919085169033907f4e989ca35a591870f77bf7fa288d50d5b06a0f76ab50b12f9a084807206dca6d9060200160405180910390a450505050565b600054610100900460ff168062000435575060005460ff16155b620004895760405162461bcd60e51b815260206004820152602e602482015260008051602062001f0683398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016200034c565b600054610100900460ff16158015620004ac576000805461ffff19166101011790555b620004b6620006cd565b620004c062000772565b8015620004d3576000805461ff00191690555b50565b6033546001600160a01b03163314620005215760405162461bcd60e51b8152602060048201819052602482015260008051602062001f2683398151915260448201526064016200034c565b606680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f52ae88b092de36f87fb43fe794eb1381023b9c1bce563a871154022c63dce34290600090a35050565b6033546001600160a01b03163314620005be5760405162461bcd60e51b8152602060048201819052602482015260008051602062001f2683398151915260448201526064016200034c565b606780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f90cc2f570a6eb594b1580ea3e41247d2d73a55281889e86bd4ec2fc29c7e62d690600090a35050565b6033546001600160a01b031633146200065b5760405162461bcd60e51b8152602060048201819052602482015260008051602062001f2683398151915260448201526064016200034c565b6001600160a01b038116620006c25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200034c565b620004d38162000809565b600054610100900460ff1680620006e7575060005460ff16155b6200073b5760405162461bcd60e51b815260206004820152602e602482015260008051602062001f0683398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016200034c565b600054610100900460ff16158015620004c0576000805461ffff19166101011790558015620004d3576000805461ff001916905550565b600054610100900460ff16806200078c575060005460ff16155b620007e05760405162461bcd60e51b815260206004820152602e602482015260008051602062001f0683398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016200034c565b600054610100900460ff1615801562000803576000805461ffff19166101011790555b620004c0335b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8051620008688162000a5e565b919050565b60008060006060848603121562000882578283fd5b83516200088f8162000a5e565b6020850151909350620008a28162000a5e565b6040850151909250620008b58162000a5e565b809150509250925092565b600080600080600060a08688031215620008d8578081fd5b8551620008e58162000a5e565b6020870151909550620008f88162000a5e565b60408701519094506200090b8162000a5e565b60608701519093506200091e8162000a5e565b80925050608086015190509295509295909350565b6000602080838503121562000946578182fd5b82516001600160401b03808211156200095d578384fd5b818501915085601f83011262000971578384fd5b81518181111562000986576200098662000a48565b8060051b604051601f19603f83011681018181108582111715620009ae57620009ae62000a48565b604052828152858101935084860182860187018a1015620009cd578788fd5b8795505b83861015620009fa57620009e5816200085b565b855260019590950194938601938601620009d1565b5098975050505050505050565b60006020828403121562000a19578081fd5b5051919050565b600060001982141562000a4157634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114620004d357600080fd5b6114828062000a846000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638da5cb5b116100a2578063c910638911610071578063c91063891461021e578063d4b839921461022f578063e19a9dd914610242578063e75235b814610255578063f2fde38b1461025d57600080fd5b80638da5cb5b146101da578063a0f44c92146101eb578063a4f9edbf14610202578063affed0e01461021557600080fd5b8063715018a6116100e9578063715018a614610186578063776d1a011461018e5780637a943918146101a15780637b5d2534146101b45780637ceab3b1146101c757600080fd5b8063086cfca81461011b578063186f0354146101305780634d02da10146101605780635aef7de614610173575b600080fd5b61012e610129366004610faa565b610270565b005b606a54610143906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61012e61016e366004611019565b6102f5565b606654610143906001600160a01b031681565b61012e610671565b61012e61019c366004610faa565b6106a7565b61012e6101af366004611168565b610723565b606954610143906001600160a01b031681565b606554610143906001600160a01b031681565b6033546001600160a01b0316610143565b6101f4606b5481565b604051908152602001610157565b61012e610210366004611135565b610816565b6101f4606d5481565b6065546001600160a01b0316610143565b606754610143906001600160a01b031681565b61012e610250366004610faa565b610951565b606c546101f4565b61012e61026b366004610faa565b610a84565b6033546001600160a01b031633146102a35760405162461bcd60e51b815260040161029a90611312565b60405180910390fd5b606680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f52ae88b092de36f87fb43fe794eb1381023b9c1bce563a871154022c63dce34290600090a35050565b845184518251849082841461034c5760405162461bcd60e51b815260206004820152601e60248201527f77726f6e67206e756d206f66206d65726b6c6520726f6f74732f6e756c730000604482015260640161029a565b81831461039b5760405162461bcd60e51b815260206004820152601860248201527f77726f6e67206e756d206f662070726f6f66732f6e756c730000000000000000604482015260640161029a565b8082146103ea5760405162461bcd60e51b815260206004820181905260248201527f77726f6e67206e756d206f66206d65726b6c652070726f6f66732f766f746573604482015260640161029a565b606c548410156104305760405162461bcd60e51b81526020600482015260116024820152701d1a1c995cda1bdb19081b9bdd081b595d607a1b604482015260640161029a565b60005b818110156105c757606d5486828151811061045e57634e487b7160e01b600052603260045260246000fd5b602002602001015160001c146104a45760405162461bcd60e51b815260206004820152600b60248201526a77726f6e675f6e6f6e636560a81b604482015260640161029a565b606954606b548b516001600160a01b0390921691638b69310a91908d90859081106104df57634e487b7160e01b600052603260045260246000fd5b602002602001015189858151811061050757634e487b7160e01b600052603260045260246000fd5b60200260200101518d868151811061052f57634e487b7160e01b600052603260045260246000fd5b6020026020010151606b548e8e8981811061055a57634e487b7160e01b600052603260045260246000fd5b905061010002016040518763ffffffff1660e01b815260040161058296959493929190611347565b600060405180830381600087803b15801561059c57600080fd5b505af11580156105b0573d6000803e3d6000fd5b5050505080806105bf906113f0565b915050610433565b506001606d60008282546105db91906113d8565b909155506105ed90508d8d8d8d610b1f565b6106395760405162461bcd60e51b815260206004820152601960248201527f4d6f64756c65207472616e73616374696f6e206661696c656400000000000000604482015260640161029a565b6040517ff54953feac90573712cdad4cf88d7d96eecd8e164d3d5eaea6caea40fec703a790600090a150505050505050505050505050565b6033546001600160a01b0316331461069b5760405162461bcd60e51b815260040161029a90611312565b6106a56000610cd0565b565b6033546001600160a01b031633146106d15760405162461bcd60e51b815260040161029a90611312565b606780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f90cc2f570a6eb594b1580ea3e41247d2d73a55281889e86bd4ec2fc29c7e62d690600090a35050565b336000908152606f602052604090205460ff161515600114156107fd57606954606b54604051631783efc360e01b81526001600160a01b0390921691631783efc39161077c918690600401918252602082015260400190565b600060405180830381600087803b15801561079657600080fd5b505af11580156107aa573d6000803e3d6000fd5b5050506000838152606e602090815260409182902084905581518581529081018490527fa50a3b4d29437818306d1859dff6fb2b1884a4f487bd1d91a8cc026ac4c9453792500160405180910390a15050565b60405163c3f10f2560e01b815260040160405180910390fd5b60008060008380602001905181019061082f9190610fcd565b92509250925061083d610d22565b6001600160a01b0382166108935760405162461bcd60e51b815260206004820152601e60248201527f4176617461722063616e206e6f74206265207a65726f20616464726573730000604482015260640161029a565b6001600160a01b0381166108e95760405162461bcd60e51b815260206004820152601e60248201527f5461726765742063616e206e6f74206265207a65726f20616464726573730000604482015260640161029a565b6108f282610270565b6108fb816106a7565b61090483610a84565b6040516001600160a01b038281168252808416919085169033907f4e989ca35a591870f77bf7fa288d50d5b06a0f76ab50b12f9a084807206dca6d9060200160405180910390a450505050565b6033546001600160a01b0316331461097b5760405162461bcd60e51b815260040161029a90611312565b6001600160a01b03811615610a30576040516301ffc9a760e01b815263736bd41d60e11b60048201526001600160a01b038216906301ffc9a79060240160206040518083038186803b1580156109d057600080fd5b505afa1580156109e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a089190611115565b610a30576040516358b7533f60e11b81526001600160a01b038216600482015260240161029a565b606580546001600160a01b0319166001600160a01b0383169081179091556040519081527f1151116914515bc0891ff9047a6cb32cf902546f83066499bcf8ba33d2353fa29060200160405180910390a150565b6033546001600160a01b03163314610aae5760405162461bcd60e51b815260040161029a90611312565b6001600160a01b038116610b135760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161029a565b610b1c81610cd0565b50565b6065546000906001600160a01b031615610bc1576065546040805180820182526002815261060f60f31b60208201529051633af85da960e11b81526001600160a01b03909216916375f0bb5291610b8e9189918991899189916000918291829182918291903390600401611235565b600060405180830381600087803b158015610ba857600080fd5b505af1158015610bbc573d6000803e3d6000fd5b505050505b60675460405163468721a760e01b81526001600160a01b039091169063468721a790610bf79088908890889088906004016111f6565b602060405180830381600087803b158015610c1157600080fd5b505af1158015610c25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c499190611115565b6065549091506001600160a01b031615610cc857606554604051631264e26d60e31b815261060f60f31b600482015282151560248201526001600160a01b0390911690639327136890604401600060405180830381600087803b158015610caf57600080fd5b505af1158015610cc3573d6000803e3d6000fd5b505050505b949350505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1680610d3b575060005460ff16155b610d575760405162461bcd60e51b815260040161029a906112c4565b600054610100900460ff16158015610d79576000805461ffff19166101011790555b610d81610d9d565b610d89610e07565b8015610b1c576000805461ff001916905550565b600054610100900460ff1680610db6575060005460ff16155b610dd25760405162461bcd60e51b815260040161029a906112c4565b600054610100900460ff16158015610d89576000805461ffff19166101011790558015610b1c576000805461ff001916905550565b600054610100900460ff1680610e20575060005460ff16155b610e3c5760405162461bcd60e51b815260040161029a906112c4565b600054610100900460ff16158015610e5e576000805461ffff19166101011790555b610d8933610cd0565b8035610e7281611437565b919050565b60008083601f840112610e88578182fd5b50813567ffffffffffffffff811115610e9f578182fd5b6020830191508360208260081b8501011115610eba57600080fd5b9250929050565b600082601f830112610ed1578081fd5b81356020610ee6610ee1836113b4565b611383565b80838252828201915082860187848660051b8901011115610f05578586fd5b855b85811015610f2357813584529284019290840190600101610f07565b5090979650505050505050565b600082601f830112610f40578081fd5b813567ffffffffffffffff811115610f5a57610f5a611421565b610f6d601f8201601f1916602001611383565b818152846020838601011115610f81578283fd5b816020850160208301379081016020019190915292915050565b803560028110610e7257600080fd5b600060208284031215610fbb578081fd5b8135610fc681611437565b9392505050565b600080600060608486031215610fe1578182fd5b8351610fec81611437565b6020850151909350610ffd81611437565b604085015190925061100e81611437565b809150509250925092565b60008060008060008060008060006101008a8c031215611037578485fd5b6110408a610e67565b985060208a0135975060408a013567ffffffffffffffff80821115611063578687fd5b61106f8d838e01610f30565b985061107d60608d01610f9b565b975060808c0135915080821115611092578687fd5b61109e8d838e01610ec1565b965060a08c01359150808211156110b3578586fd5b6110bf8d838e01610ec1565b955060c08c01359150808211156110d4578485fd5b6110e08d838e01610e77565b909550935060e08c01359150808211156110f8578283fd5b506111058c828d01610ec1565b9150509295985092959850929598565b600060208284031215611126578081fd5b81518015158114610fc6578182fd5b600060208284031215611146578081fd5b813567ffffffffffffffff81111561115c578182fd5b610cc884828501610f30565b6000806040838503121561117a578182fd5b50508035926020909101359150565b60008151808452815b818110156111ae57602081850181015186830182015201611192565b818111156111bf5782602083870101525b50601f01601f19169290920160200192915050565b600281106111f257634e487b7160e01b600052602160045260246000fd5b9052565b60018060a01b038516815283602082015260806040820152600061121d6080830185611189565b905061122c60608301846111d4565b95945050505050565b6001600160a01b038c81168252602082018c9052610160604083018190526000916112628483018e611189565b9150611271606085018d6111d4565b8a60808501528960a08501528860c085015280881660e08501528087166101008501528382036101208501526112a78287611189565b925080851661014085015250509c9b505050505050505050505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006101a0820190508782528660208301528560408301528460608301528360808301526101008360a084013760008152979650505050505050565b604051601f8201601f1916810167ffffffffffffffff811182821017156113ac576113ac611421565b604052919050565b600067ffffffffffffffff8211156113ce576113ce611421565b5060051b60200190565b600082198211156113eb576113eb61140b565b500190565b60006000198214156114045761140461140b565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610b1c57600080fdfea26469706673582212207da69eb6dadbd4fe6efe576539285f3319a97c8f18e04cd5f1622b619477cc4864736f6c63430008040033496e697469616c697a61626c653a20636f6e747261637420697320616c7265614f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
    "sourceMap": "267:4722:52:-:0;;;1320:494;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1637:1:8;1742:7;:22;1494:60:52;;;-1:-1:-1;;;;;3349:15:55;;;1494:60:52;;;3331:34:55;3401:15;;;3381:18;;;3374:43;;;3453:15;;;3433:18;;;;3426:43;;;;1494:60:52;;;;;;;;;;3266:18:55;;;;1494:60:52;;;1561:9;:34;;;;;-1:-1:-1;;;;;;1561:34:52;;;;;;1601:4;:26;;;;;;;;;;;1633:18;:16;:18::i;:::-;1657:7;:18;;;1693:4;;:19;;;-1:-1:-1;;;1693:19:52;;;;-1:-1:-1;;;;;1693:4:52;;;;:17;;:19;;;;;;;;;;;;;;;:4;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1681:9;:31;1726:1;1718:5;:9;;;1733;;1755:7;;1733:52;;;-1:-1:-1;;;1733:52:52;;;;;5629:25:55;;;;1764:2:52;5670:18:55;;;5663:34;5713:18;;;5706:34;;;1779:4:52;5756:18:55;;;5749:60;1733:52:52;-1:-1:-1;;;;;1733:9:52;;;;-1:-1:-1;;5601:19:55;;;;;1733:52:52;;;;;1726:1;1733:9;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1792:17;1798:10;1792:5;;;:17;;:::i;:::-;1320:494;;;;;;267:4722;;2350:210;2419:4;;:16;;;-1:-1:-1;;;2419:16:52;;;;2393:23;;-1:-1:-1;;;;;2419:4:52;;-1:-1:-1;;2419:16:52;;;;;2393:23;;2419:16;;;;;;;:4;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2419:16:52;;;;;;;;;;;;:::i;:::-;2455:13;;2393:42;;-1:-1:-1;2441:11:52;2474:82;2498:3;2494:1;:7;2474:82;;;2545:4;2517:14;:25;2532:6;2539:1;2532:9;;;;;;-1:-1:-1;;;2532:9:52;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2517:25:52;;;;;;;;;;;-1:-1:-1;2517:25:52;:32;;-1:-1:-1;;2517:32:52;;;;;;;;;;2503:4;;;;:::i;:::-;;;;2474:82;;;;2350:210;;:::o;1818:528::-;1888:14;1910:15;1933;1977:10;1957:75;;;;;;;;;;;;:::i;:::-;1880:152;;-1:-1:-1;1880:152:52;-1:-1:-1;1880:152:52;-1:-1:-1;2038:16:52;:14;:16::i;:::-;-1:-1:-1;;;;;2069:21:52;;2061:64;;;;-1:-1:-1;;;2061:64:52;;5224:2:55;2061:64:52;;;5206:21:55;5263:2;5243:18;;;5236:30;5302:32;5282:18;;;5275:60;5352:18;;2061:64:52;;;;;;;;;-1:-1:-1;;;;;2139:21:52;;2131:64;;;;-1:-1:-1;;;2131:64:52;;4089:2:55;2131:64:52;;;4071:21:55;4128:2;4108:18;;;4101:30;4167:32;4147:18;;;4140:60;4217:18;;2131:64:52;4061:180:55;2131:64:52;2201:18;2211:7;2201:9;:18::i;:::-;2225;2235:7;2225:9;:18::i;:::-;2250:25;2268:6;2250:17;:25::i;:::-;2287:54;;;-1:-1:-1;;;;;3015:32:55;;;2997:51;;2287:54:52;;;;;;;;;2304:10;;2287:54;;;;;2985:2:55;2287:54:52;;;1818:528;;;;:::o;934:126:5:-;1409:13:6;;;;;;;;:30;;-1:-1:-1;1427:12:6;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:6;;4448:2:55;1401:89:6;;;4430:21:55;4487:2;4467:18;;;4460:30;-1:-1:-1;;;;;;;;;;;4506:18:55;;;4499:62;-1:-1:-1;;;4577:18:55;;;4570:44;4631:19;;1401:89:6;4420:236:55;1401:89:6;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:6;;;;;1547:98;991:26:5::1;:24;:26::i;:::-;1027;:24;:26::i;:::-;1671:14:6::0;1667:66;;;1717:5;1701:21;;-1:-1:-1;;1701:21:6;;;1667:66;934:126:5;:::o;:176:29:-;1311:6:5;;-1:-1:-1;;;;;1311:6:5;901:10:7;1451:23:5;1443:68;;;;-1:-1:-1;;;1443:68:5;;4863:2:55;1443:68:5;;;4845:21:55;;;4882:18;;;4875:30;-1:-1:-1;;;;;;;;;;;4921:18:55;;;4914:62;4993:18;;1443:68:5;4835:182:55;1443:68:5;1022:6:29::1;::::0;;-1:-1:-1;;;;;1038:16:29;;::::1;-1:-1:-1::0;;;;;;1038:16:29;::::1;::::0;::::1;::::0;;;1069:34:::1;::::0;1022:6;::::1;::::0;1038:16;1022:6;;1069:34:::1;::::0;-1:-1:-1;;1069:34:29::1;1521:1:5;934:176:29::0;:::o;1233:::-;1311:6:5;;-1:-1:-1;;;;;1311:6:5;901:10:7;1451:23:5;1443:68;;;;-1:-1:-1;;;1443:68:5;;4863:2:55;1443:68:5;;;4845:21:55;;;4882:18;;;4875:30;-1:-1:-1;;;;;;;;;;;4921:18:55;;;4914:62;4993:18;;1443:68:5;4835:182:55;1443:68:5;1321:6:29::1;::::0;;-1:-1:-1;;;;;1337:16:29;;::::1;-1:-1:-1::0;;;;;;1337:16:29;::::1;::::0;::::1;::::0;;;1368:34:::1;::::0;1321:6;::::1;::::0;1337:16;1321:6;;1368:34:::1;::::0;-1:-1:-1;;1368:34:29::1;1521:1:5;1233:176:29::0;:::o;2112:189:5:-;1311:6;;-1:-1:-1;;;;;1311:6:5;901:10:7;1451:23:5;1443:68;;;;-1:-1:-1;;;1443:68:5;;4863:2:55;1443:68:5;;;4845:21:55;;;4882:18;;;4875:30;-1:-1:-1;;;;;;;;;;;4921:18:55;;;4914:62;4993:18;;1443:68:5;4835:182:55;1443:68:5;-1:-1:-1;;;;;2200:22:5;::::1;2192:73;;;::::0;-1:-1:-1;;;2192:73:5;;3682:2:55;2192:73:5::1;::::0;::::1;3664:21:55::0;3721:2;3701:18;;;3694:30;3760:34;3740:18;;;3733:62;-1:-1:-1;;;3811:18:55;;;3804:36;3857:19;;2192:73:5::1;3654:228:55::0;2192:73:5::1;2275:19;2285:8:::0;2275:9:::1;:19::i;753:64:7:-:0;1409:13:6;;;;;;;;:30;;-1:-1:-1;1427:12:6;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:6;;4448:2:55;1401:89:6;;;4430:21:55;4487:2;4467:18;;;4460:30;-1:-1:-1;;;;;;;;;;;4506:18:55;;;4499:62;-1:-1:-1;;;4577:18:55;;;4570:44;4631:19;;1401:89:6;4420:236:55;1401:89:6;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:6;;;;;1667:66;;;;-1:-1:-1;1717:5:6;1701:21;;-1:-1:-1;;1701:21:6;;;753:64:7:o;1066:97:5:-;1409:13:6;;;;;;;;:30;;-1:-1:-1;1427:12:6;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:6;;4448:2:55;1401:89:6;;;4430:21:55;4487:2;4467:18;;;4460:30;-1:-1:-1;;;;;;;;;;;4506:18:55;;;4499:62;-1:-1:-1;;;4577:18:55;;;4570:44;4631:19;;1401:89:6;4420:236:55;1401:89:6;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:6;;;;;1547:98;1133:23:5::1;901:10:7::0;1143:12:5::1;2381:6:::0;;;-1:-1:-1;;;;;2397:17:5;;;-1:-1:-1;;;;;;2397:17:5;;;;;;;2429:40;;2381:6;;;2397:17;2381:6;;2429:40;;-1:-1:-1;;2429:40:5;2307:169;;:::o;14:138:55:-;93:13;;115:31;93:13;115:31;:::i;:::-;74:78;;;:::o;157:553::-;269:6;277;285;338:2;326:9;317:7;313:23;309:32;306:2;;;359:6;351;344:22;306:2;396:9;390:16;415:31;440:5;415:31;:::i;:::-;515:2;500:18;;494:25;465:5;;-1:-1:-1;528:33:55;494:25;528:33;:::i;:::-;632:2;617:18;;611:25;580:7;;-1:-1:-1;645:33:55;611:25;645:33;:::i;:::-;697:7;687:17;;;296:414;;;;;:::o;715:742::-;837:6;845;853;861;869;922:3;910:9;901:7;897:23;893:33;890:2;;;944:6;936;929:22;890:2;981:9;975:16;1000:31;1025:5;1000:31;:::i;:::-;1100:2;1085:18;;1079:25;1050:5;;-1:-1:-1;1113:33:55;1079:25;1113:33;:::i;:::-;1217:2;1202:18;;1196:25;1165:7;;-1:-1:-1;1230:33:55;1196:25;1230:33;:::i;:::-;1334:2;1319:18;;1313:25;1282:7;;-1:-1:-1;1347:33:55;1313:25;1347:33;:::i;:::-;1399:7;1389:17;;;1446:3;1435:9;1431:19;1425:26;1415:36;;880:577;;;;;;;;:::o;1462:1185::-;1557:6;1588:2;1631;1619:9;1610:7;1606:23;1602:32;1599:2;;;1652:6;1644;1637:22;1599:2;1684:16;;-1:-1:-1;1749:14:55;;;1746:2;;;1781:6;1773;1766:22;1746:2;1824:6;1813:9;1809:22;1799:32;;1869:7;1862:4;1858:2;1854:13;1850:27;1840:2;;1896:6;1888;1881:22;1840:2;1930;1924:9;1952:2;1948;1945:10;1942:2;;;1958:18;;:::i;:::-;2004:2;2001:1;1997:10;2036:2;2030:9;2099:2;2095:7;2090:2;2086;2082:11;2078:25;2070:6;2066:38;2154:6;2142:10;2139:22;2134:2;2122:10;2119:18;2116:46;2113:2;;;2165:18;;:::i;:::-;2201:2;2194:22;2251:18;;;2285:15;;;;-1:-1:-1;2320:11:55;;;2350;;;2346:20;;2343:33;-1:-1:-1;2340:2:55;;;2394:6;2386;2379:22;2340:2;2421:6;2412:15;;2436:180;2450:2;2447:1;2444:9;2436:180;;;2507:34;2537:3;2507:34;:::i;:::-;2495:47;;2468:1;2461:9;;;;;2562:12;;;;2594;;2436:180;;;-1:-1:-1;2635:6:55;1568:1079;-1:-1:-1;;;;;;;;1568:1079:55:o;2652:194::-;2722:6;2775:2;2763:9;2754:7;2750:23;2746:32;2743:2;;;2796:6;2788;2781:22;2743:2;-1:-1:-1;2824:16:55;;2733:113;-1:-1:-1;2733:113:55:o;5820:236::-;5859:3;-1:-1:-1;;5880:17:55;;5877:2;;;-1:-1:-1;;;5920:33:55;;5976:4;5973:1;5966:15;6006:4;5920:33;5994:17;5877:2;-1:-1:-1;6048:1:55;6037:13;;5867:189::o;6061:127::-;6122:10;6117:3;6113:20;6110:1;6103:31;6153:4;6150:1;6143:15;6177:4;6174:1;6167:15;6193:131;-1:-1:-1;;;;;6268:31:55;;6258:42;;6248:2;;6314:1;6311;6304:12;6238:86;267:4722:52;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c80638da5cb5b116100a2578063c910638911610071578063c91063891461021e578063d4b839921461022f578063e19a9dd914610242578063e75235b814610255578063f2fde38b1461025d57600080fd5b80638da5cb5b146101da578063a0f44c92146101eb578063a4f9edbf14610202578063affed0e01461021557600080fd5b8063715018a6116100e9578063715018a614610186578063776d1a011461018e5780637a943918146101a15780637b5d2534146101b45780637ceab3b1146101c757600080fd5b8063086cfca81461011b578063186f0354146101305780634d02da10146101605780635aef7de614610173575b600080fd5b61012e610129366004610faa565b610270565b005b606a54610143906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61012e61016e366004611019565b6102f5565b606654610143906001600160a01b031681565b61012e610671565b61012e61019c366004610faa565b6106a7565b61012e6101af366004611168565b610723565b606954610143906001600160a01b031681565b606554610143906001600160a01b031681565b6033546001600160a01b0316610143565b6101f4606b5481565b604051908152602001610157565b61012e610210366004611135565b610816565b6101f4606d5481565b6065546001600160a01b0316610143565b606754610143906001600160a01b031681565b61012e610250366004610faa565b610951565b606c546101f4565b61012e61026b366004610faa565b610a84565b6033546001600160a01b031633146102a35760405162461bcd60e51b815260040161029a90611312565b60405180910390fd5b606680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f52ae88b092de36f87fb43fe794eb1381023b9c1bce563a871154022c63dce34290600090a35050565b845184518251849082841461034c5760405162461bcd60e51b815260206004820152601e60248201527f77726f6e67206e756d206f66206d65726b6c6520726f6f74732f6e756c730000604482015260640161029a565b81831461039b5760405162461bcd60e51b815260206004820152601860248201527f77726f6e67206e756d206f662070726f6f66732f6e756c730000000000000000604482015260640161029a565b8082146103ea5760405162461bcd60e51b815260206004820181905260248201527f77726f6e67206e756d206f66206d65726b6c652070726f6f66732f766f746573604482015260640161029a565b606c548410156104305760405162461bcd60e51b81526020600482015260116024820152701d1a1c995cda1bdb19081b9bdd081b595d607a1b604482015260640161029a565b60005b818110156105c757606d5486828151811061045e57634e487b7160e01b600052603260045260246000fd5b602002602001015160001c146104a45760405162461bcd60e51b815260206004820152600b60248201526a77726f6e675f6e6f6e636560a81b604482015260640161029a565b606954606b548b516001600160a01b0390921691638b69310a91908d90859081106104df57634e487b7160e01b600052603260045260246000fd5b602002602001015189858151811061050757634e487b7160e01b600052603260045260246000fd5b60200260200101518d868151811061052f57634e487b7160e01b600052603260045260246000fd5b6020026020010151606b548e8e8981811061055a57634e487b7160e01b600052603260045260246000fd5b905061010002016040518763ffffffff1660e01b815260040161058296959493929190611347565b600060405180830381600087803b15801561059c57600080fd5b505af11580156105b0573d6000803e3d6000fd5b5050505080806105bf906113f0565b915050610433565b506001606d60008282546105db91906113d8565b909155506105ed90508d8d8d8d610b1f565b6106395760405162461bcd60e51b815260206004820152601960248201527f4d6f64756c65207472616e73616374696f6e206661696c656400000000000000604482015260640161029a565b6040517ff54953feac90573712cdad4cf88d7d96eecd8e164d3d5eaea6caea40fec703a790600090a150505050505050505050505050565b6033546001600160a01b0316331461069b5760405162461bcd60e51b815260040161029a90611312565b6106a56000610cd0565b565b6033546001600160a01b031633146106d15760405162461bcd60e51b815260040161029a90611312565b606780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f90cc2f570a6eb594b1580ea3e41247d2d73a55281889e86bd4ec2fc29c7e62d690600090a35050565b336000908152606f602052604090205460ff161515600114156107fd57606954606b54604051631783efc360e01b81526001600160a01b0390921691631783efc39161077c918690600401918252602082015260400190565b600060405180830381600087803b15801561079657600080fd5b505af11580156107aa573d6000803e3d6000fd5b5050506000838152606e602090815260409182902084905581518581529081018490527fa50a3b4d29437818306d1859dff6fb2b1884a4f487bd1d91a8cc026ac4c9453792500160405180910390a15050565b60405163c3f10f2560e01b815260040160405180910390fd5b60008060008380602001905181019061082f9190610fcd565b92509250925061083d610d22565b6001600160a01b0382166108935760405162461bcd60e51b815260206004820152601e60248201527f4176617461722063616e206e6f74206265207a65726f20616464726573730000604482015260640161029a565b6001600160a01b0381166108e95760405162461bcd60e51b815260206004820152601e60248201527f5461726765742063616e206e6f74206265207a65726f20616464726573730000604482015260640161029a565b6108f282610270565b6108fb816106a7565b61090483610a84565b6040516001600160a01b038281168252808416919085169033907f4e989ca35a591870f77bf7fa288d50d5b06a0f76ab50b12f9a084807206dca6d9060200160405180910390a450505050565b6033546001600160a01b0316331461097b5760405162461bcd60e51b815260040161029a90611312565b6001600160a01b03811615610a30576040516301ffc9a760e01b815263736bd41d60e11b60048201526001600160a01b038216906301ffc9a79060240160206040518083038186803b1580156109d057600080fd5b505afa1580156109e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a089190611115565b610a30576040516358b7533f60e11b81526001600160a01b038216600482015260240161029a565b606580546001600160a01b0319166001600160a01b0383169081179091556040519081527f1151116914515bc0891ff9047a6cb32cf902546f83066499bcf8ba33d2353fa29060200160405180910390a150565b6033546001600160a01b03163314610aae5760405162461bcd60e51b815260040161029a90611312565b6001600160a01b038116610b135760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161029a565b610b1c81610cd0565b50565b6065546000906001600160a01b031615610bc1576065546040805180820182526002815261060f60f31b60208201529051633af85da960e11b81526001600160a01b03909216916375f0bb5291610b8e9189918991899189916000918291829182918291903390600401611235565b600060405180830381600087803b158015610ba857600080fd5b505af1158015610bbc573d6000803e3d6000fd5b505050505b60675460405163468721a760e01b81526001600160a01b039091169063468721a790610bf79088908890889088906004016111f6565b602060405180830381600087803b158015610c1157600080fd5b505af1158015610c25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c499190611115565b6065549091506001600160a01b031615610cc857606554604051631264e26d60e31b815261060f60f31b600482015282151560248201526001600160a01b0390911690639327136890604401600060405180830381600087803b158015610caf57600080fd5b505af1158015610cc3573d6000803e3d6000fd5b505050505b949350505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1680610d3b575060005460ff16155b610d575760405162461bcd60e51b815260040161029a906112c4565b600054610100900460ff16158015610d79576000805461ffff19166101011790555b610d81610d9d565b610d89610e07565b8015610b1c576000805461ff001916905550565b600054610100900460ff1680610db6575060005460ff16155b610dd25760405162461bcd60e51b815260040161029a906112c4565b600054610100900460ff16158015610d89576000805461ffff19166101011790558015610b1c576000805461ff001916905550565b600054610100900460ff1680610e20575060005460ff16155b610e3c5760405162461bcd60e51b815260040161029a906112c4565b600054610100900460ff16158015610e5e576000805461ffff19166101011790555b610d8933610cd0565b8035610e7281611437565b919050565b60008083601f840112610e88578182fd5b50813567ffffffffffffffff811115610e9f578182fd5b6020830191508360208260081b8501011115610eba57600080fd5b9250929050565b600082601f830112610ed1578081fd5b81356020610ee6610ee1836113b4565b611383565b80838252828201915082860187848660051b8901011115610f05578586fd5b855b85811015610f2357813584529284019290840190600101610f07565b5090979650505050505050565b600082601f830112610f40578081fd5b813567ffffffffffffffff811115610f5a57610f5a611421565b610f6d601f8201601f1916602001611383565b818152846020838601011115610f81578283fd5b816020850160208301379081016020019190915292915050565b803560028110610e7257600080fd5b600060208284031215610fbb578081fd5b8135610fc681611437565b9392505050565b600080600060608486031215610fe1578182fd5b8351610fec81611437565b6020850151909350610ffd81611437565b604085015190925061100e81611437565b809150509250925092565b60008060008060008060008060006101008a8c031215611037578485fd5b6110408a610e67565b985060208a0135975060408a013567ffffffffffffffff80821115611063578687fd5b61106f8d838e01610f30565b985061107d60608d01610f9b565b975060808c0135915080821115611092578687fd5b61109e8d838e01610ec1565b965060a08c01359150808211156110b3578586fd5b6110bf8d838e01610ec1565b955060c08c01359150808211156110d4578485fd5b6110e08d838e01610e77565b909550935060e08c01359150808211156110f8578283fd5b506111058c828d01610ec1565b9150509295985092959850929598565b600060208284031215611126578081fd5b81518015158114610fc6578182fd5b600060208284031215611146578081fd5b813567ffffffffffffffff81111561115c578182fd5b610cc884828501610f30565b6000806040838503121561117a578182fd5b50508035926020909101359150565b60008151808452815b818110156111ae57602081850181015186830182015201611192565b818111156111bf5782602083870101525b50601f01601f19169290920160200192915050565b600281106111f257634e487b7160e01b600052602160045260246000fd5b9052565b60018060a01b038516815283602082015260806040820152600061121d6080830185611189565b905061122c60608301846111d4565b95945050505050565b6001600160a01b038c81168252602082018c9052610160604083018190526000916112628483018e611189565b9150611271606085018d6111d4565b8a60808501528960a08501528860c085015280881660e08501528087166101008501528382036101208501526112a78287611189565b925080851661014085015250509c9b505050505050505050505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006101a0820190508782528660208301528560408301528460608301528360808301526101008360a084013760008152979650505050505050565b604051601f8201601f1916810167ffffffffffffffff811182821017156113ac576113ac611421565b604052919050565b600067ffffffffffffffff8211156113ce576113ce611421565b5060051b60200190565b600082198211156113eb576113eb61140b565b500190565b60006000198214156114045761140461140b565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610b1c57600080fdfea26469706673582212207da69eb6dadbd4fe6efe576539285f3319a97c8f18e04cd5f1622b619477cc4864736f6c63430008040033",
    "sourceMap": "267:4722:52:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;934:176:29;;;;;;:::i;:::-;;:::i;:::-;;353:22:52;;;;;-1:-1:-1;;;;;353:22:52;;;;;;-1:-1:-1;;;;;6972:32:55;;;;6954:51;;6942:2;6927:18;353:22:52;;;;;;;;3657:1330;;;;;;:::i;:::-;;:::i;436:21:29:-;;;;;-1:-1:-1;;;;;436:21:29;;;1871:92:5;;;:::i;1233:176:29:-;;;;;;:::i;:::-;;:::i;2713:368:52:-;;;;;;:::i;:::-;;:::i;322:27::-;;;;;-1:-1:-1;;;;;322:27:52;;;371:20:32;;;;;-1:-1:-1;;;;;371:20:32;;;1239:85:5;1311:6;;-1:-1:-1;;;;;1311:6:5;1239:85;;380:22:52;;;;;;;;;13803:25:55;;;13791:2;13776:18;380:22:52;13758:76:55;1818:528:52;;;;;;:::i;:::-;;:::i;427:20::-;;;;;;998:88:32;1074:5;;-1:-1:-1;;;;;1074:5:32;998:88;;528:21:29;;;;;-1:-1:-1;;;;;528:21:29;;;696:296:32;;;;;;:::i;:::-;;:::i;2631:78:52:-;2695:9;;2631:78;;2112:189:5;;;;;;:::i;:::-;;:::i;934:176:29:-;1311:6:5;;-1:-1:-1;;;;;1311:6:5;901:10:7;1451:23:5;1443:68;;;;-1:-1:-1;;;1443:68:5;;;;;;;:::i;:::-;;;;;;;;;1022:6:29::1;::::0;;-1:-1:-1;;;;;1038:16:29;;::::1;-1:-1:-1::0;;;;;;1038:16:29;::::1;::::0;::::1;::::0;;;1069:34:::1;::::0;1022:6;::::1;::::0;1038:16;1022:6;;1069:34:::1;::::0;-1:-1:-1;;1069:34:29::1;1521:1:5;934:176:29::0;:::o;3657:1330:52:-;4222:22;;4273;;4358:12;;4320:6;;4385:29;;;4377:72;;;;-1:-1:-1;;;4377:72:52;;10252:2:55;4377:72:52;;;10234:21:55;10291:2;10271:18;;;10264:30;10330:32;10310:18;;;10303:60;10380:18;;4377:72:52;10224:180:55;4377:72:52;4479:8;4463:12;:24;4455:61;;;;-1:-1:-1;;;4455:61:52;;13152:2:55;4455:61:52;;;13134:21:55;13191:2;13171:18;;;13164:30;13230:26;13210:18;;;13203:54;13274:18;;4455:61:52;13124:174:55;4455:61:52;4542:8;4530;:20;4522:65;;;;-1:-1:-1;;;4522:65:52;;11385:2:55;4522:65:52;;;11367:21:55;;;11404:18;;;11397:30;11463:34;11443:18;;;11436:62;11515:18;;4522:65:52;11357:182:55;4522:65:52;4618:9;;4601:13;:26;;4593:56;;;;-1:-1:-1;;;4593:56:52;;12806:2:55;4593:56:52;;;12788:21:55;12845:2;12825:18;;;12818:30;-1:-1:-1;;;12864:18:55;;;12857:47;12921:18;;4593:56:52;12778:167:55;4593:56:52;4662:9;4657:213;4681:8;4677:1;:12;4657:213;;;4734:5;;4721;4727:1;4721:8;;;;;;-1:-1:-1;;;4721:8:52;;;;;;;;;;;;;;;4713:17;;:26;4705:50;;;;-1:-1:-1;;;4705:50:52;;11746:2:55;4705:50:52;;;11728:21:55;11785:2;11765:18;;;11758:30;-1:-1:-1;;;11804:18:55;;;11797:41;11855:18;;4705:50:52;11718:161:55;4705:50:52;4763:9;;4785:7;;4794:18;;-1:-1:-1;;;;;4763:9:52;;;;:21;;4785:7;4794:18;;4810:1;;4794:18;;;;-1:-1:-1;;;4794:18:52;;;;;;;;;;;;;;;4814:5;4820:1;4814:8;;;;;;-1:-1:-1;;;4814:8:52;;;;;;;;;;;;;;;4824:15;4840:1;4824:18;;;;;;-1:-1:-1;;;4824:18:52;;;;;;;;;;;;;;;4844:7;;4853:6;;4860:1;4853:9;;;;;-1:-1:-1;;;4853:9:52;;;;;;;;;;;;;;4763:100;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4691:4;;;;;:::i;:::-;;;;4657:213;;;;4885:1;4876:5;;:10;;;;;;;:::i;:::-;;;;-1:-1:-1;4901:32:52;;-1:-1:-1;4906:2:52;4910:5;4917:4;4923:9;4901:4;:32::i;:::-;4893:70;;;;-1:-1:-1;;;4893:70:52;;13505:2:55;4893:70:52;;;13487:21:55;13544:2;13524:18;;;13517:30;13583:27;13563:18;;;13556:55;13628:18;;4893:70:52;13477:175:55;4893:70:52;4974:8;;;;;;;3657:1330;;;;;;;;;;;;;:::o;1871:92:5:-;1311:6;;-1:-1:-1;;;;;1311:6:5;901:10:7;1451:23:5;1443:68;;;;-1:-1:-1;;;1443:68:5;;;;;;;:::i;:::-;1935:21:::1;1953:1;1935:9;:21::i;:::-;1871:92::o:0;1233:176:29:-;1311:6:5;;-1:-1:-1;;;;;1311:6:5;901:10:7;1451:23:5;1443:68;;;;-1:-1:-1;;;1443:68:5;;;;;;;:::i;:::-;1321:6:29::1;::::0;;-1:-1:-1;;;;;1337:16:29;;::::1;-1:-1:-1::0;;;;;;1337:16:29;::::1;::::0;::::1;::::0;;;1368:34:::1;::::0;1321:6;::::1;::::0;1337:16;1321:6;;1368:34:::1;::::0;-1:-1:-1;;1368:34:29::1;1521:1:5;1233:176:29::0;:::o;2713:368:52:-;2854:10;2839:26;;;;:14;:26;;;;;;;;:34;;:26;:34;2835:242;;;2883:9;;2903:7;;2883:48;;-1:-1:-1;;;2883:48:52;;;;;14013:25:55;;;;14054:18;;;14047:34;;;-1:-1:-1;;;;;2883:9:52;;;;-1:-1:-1;;13986:18:55;;2883:48:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2939:25:52;;;;:5;:25;;;;;;;;;:36;;;2988:37;;14013:25:55;;;14054:18;;;14047:34;;;2988:37:52;;-1:-1:-1;13986:18:55;2988:37:52;;;;;;;2713:368;;:::o;2835:242::-;3053:17;;-1:-1:-1;;;3053:17:52;;;;;;;;;;;1818:528;1888:14;1910:15;1933;1977:10;1957:75;;;;;;;;;;;;:::i;:::-;1880:152;;;;;;2038:16;:14;:16::i;:::-;-1:-1:-1;;;;;2069:21:52;;2061:64;;;;-1:-1:-1;;;2061:64:52;;12447:2:55;2061:64:52;;;12429:21:55;12486:2;12466:18;;;12459:30;12525:32;12505:18;;;12498:60;12575:18;;2061:64:52;12419:180:55;2061:64:52;-1:-1:-1;;;;;2139:21:52;;2131:64;;;;-1:-1:-1;;;2131:64:52;;10611:2:55;2131:64:52;;;10593:21:55;10650:2;10630:18;;;10623:30;10689:32;10669:18;;;10662:60;10739:18;;2131:64:52;10583:180:55;2131:64:52;2201:18;2211:7;2201:9;:18::i;:::-;2225;2235:7;2225:9;:18::i;:::-;2250:25;2268:6;2250:17;:25::i;:::-;2287:54;;;-1:-1:-1;;;;;6972:32:55;;;6954:51;;2287:54:52;;;;;;;;;2304:10;;2287:54;;;;;6942:2:55;2287:54:52;;;1818:528;;;;:::o;696:296:32:-;1311:6:5;;-1:-1:-1;;;;;1311:6:5;901:10:7;1451:23:5;1443:68;;;;-1:-1:-1;;;1443:68:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;763:20:32;::::1;::::0;759:169:::1;;804:61;::::0;-1:-1:-1;;;804:61:32;;-1:-1:-1;;;804:61:32::1;::::0;::::1;9116:52:55::0;-1:-1:-1;;;;;804:35:32;::::1;::::0;::::1;::::0;9089:18:55;;804:61:32::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;799:118;;890:27;::::0;-1:-1:-1;;;890:27:32;;-1:-1:-1;;;;;6972:32:55;;890:27:32::1;::::0;::::1;6954:51:55::0;6927:18;;890:27:32::1;6909:102:55::0;799:118:32::1;937:5;:14:::0;;-1:-1:-1;;;;;;937:14:32::1;-1:-1:-1::0;;;;;937:14:32;::::1;::::0;;::::1;::::0;;;966:19:::1;::::0;;6954:51:55;;;966:19:32;::::1;::::0;6942:2:55;966:19:32;;;;;;::::1;696:296:::0;:::o;2112:189:5:-;1311:6;;-1:-1:-1;;;;;1311:6:5;901:10:7;1451:23:5;1443:68;;;;-1:-1:-1;;;1443:68:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;2200:22:5;::::1;2192:73;;;::::0;-1:-1:-1;;;2192:73:5;;9845:2:55;2192:73:5::1;::::0;::::1;9827:21:55::0;9884:2;9864:18;;;9857:30;9923:34;9903:18;;;9896:62;-1:-1:-1;;;9974:18:55;;;9967:36;10020:19;;2192:73:5::1;9817:228:55::0;2192:73:5::1;2275:19;2285:8;2275:9;:19::i;:::-;2112:189:::0;:::o;1799:1043:29:-;2023:5;;1941:12;;-1:-1:-1;;;;;2023:5:29;:19;2019:530;;2065:5;;2485:11;;;;;;;;;;;-1:-1:-1;;;2485:11:29;;;;2058:480;;-1:-1:-1;;;2058:480:29;;-1:-1:-1;;;;;2065:5:29;;;;2058:30;;:480;;2172:2;;2192:5;;2215:4;;2237:9;;-1:-1:-1;;;;;;;;;;2485:11:29;2514:10;;2058:480;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2019:530;2576:6;;2568:127;;-1:-1:-1;;;2568:127:29;;-1:-1:-1;;;;;2576:6:29;;;;-1:-1:-1;;2568:127:29;;2623:2;;2639:5;;2658:4;;2676:9;;2568:127;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2709:5;;2558:137;;-1:-1:-1;;;;;;2709:5:29;:19;2705:107;;2751:5;;2744:57;;-1:-1:-1;;;2744:57:29;;-1:-1:-1;;;2744:57:29;;;8877:25:55;8945:14;;8938:22;8918:18;;;8911:50;-1:-1:-1;;;;;2751:5:29;;;;2744:33;;8850:18:55;;2744:57:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2705:107;1799:1043;;;;;;:::o;2307:169:5:-;2381:6;;;-1:-1:-1;;;;;2397:17:5;;;-1:-1:-1;;;;;;2397:17:5;;;;;;;2429:40;;2381:6;;;2397:17;2381:6;;2429:40;;-1:-1:-1;;2429:40:5;2307:169;;:::o;934:126::-;1409:13:6;;;;;;;;:30;;-1:-1:-1;1427:12:6;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:6;;;;;;;:::i;:::-;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:6;;;;;1547:98;991:26:5::1;:24;:26::i;:::-;1027;:24;:26::i;:::-;1671:14:6::0;1667:66;;;-1:-1:-1;1717:5:6;1701:21;;-1:-1:-1;;1701:21:6;;;934:126:5:o;753:64:7:-;1409:13:6;;;;;;;;:30;;-1:-1:-1;1427:12:6;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:6;;;;;;;:::i;:::-;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:6;;;;;1667:66;;;;-1:-1:-1;1717:5:6;1701:21;;-1:-1:-1;;1701:21:6;;;753:64:7:o;1066:97:5:-;1409:13:6;;;;;;;;:30;;-1:-1:-1;1427:12:6;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:6;;;;;;;:::i;:::-;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:6;;;;;1547:98;1133:23:5::1;901:10:7::0;1133:9:5::1;:23::i;14:134:55:-:0;82:20;;111:31;82:20;111:31;:::i;:::-;63:85;;;:::o;153:410::-;231:8;241:6;295:3;288:4;280:6;276:17;272:27;262:2;;320:8;310;303:26;262:2;-1:-1:-1;350:20:55;;393:18;382:30;;379:2;;;432:8;422;415:26;379:2;476:4;468:6;464:17;452:29;;536:3;529:4;519:6;516:1;512:14;504:6;500:27;496:38;493:47;490:2;;;553:1;550;543:12;490:2;252:311;;;;;:::o;568:693::-;622:5;675:3;668:4;660:6;656:17;652:27;642:2;;697:5;690;683:20;642:2;737:6;724:20;763:4;787:60;803:43;843:2;803:43;:::i;:::-;787:60;:::i;:::-;869:3;893:2;888:3;881:15;921:2;916:3;912:12;905:19;;956:2;948:6;944:15;1008:3;1003:2;997;994:1;990:10;982:6;978:23;974:32;971:41;968:2;;;1029:5;1022;1015:20;968:2;1055:5;1069:163;1083:2;1080:1;1077:9;1069:163;;;1140:17;;1128:30;;1178:12;;;;1210;;;;1101:1;1094:9;1069:163;;;-1:-1:-1;1250:5:55;;632:629;-1:-1:-1;;;;;;;632:629:55:o;1964:550::-;2006:5;2059:3;2052:4;2044:6;2040:17;2036:27;2026:2;;2081:5;2074;2067:20;2026:2;2121:6;2108:20;2147:18;2143:2;2140:26;2137:2;;;2169:18;;:::i;:::-;2213:55;-1:-1:-1;2237:13:55;;-1:-1:-1;;2233:27:55;2262:4;2229:38;2213:55;:::i;:::-;2293:2;2284:7;2277:19;2339:3;2332:4;2327:2;2319:6;2315:15;2311:26;2308:35;2305:2;;;2360:5;2353;2346:20;2305:2;2429;2422:4;2414:6;2410:17;2403:4;2394:7;2390:18;2377:55;2452:16;;;2470:4;2448:27;2441:42;;;;2456:7;2016:498;-1:-1:-1;;2016:498:55:o;2519:150::-;2594:20;;2643:1;2633:12;;2623:2;;2659:1;2656;2649:12;2674:257;2733:6;2786:2;2774:9;2765:7;2761:23;2757:32;2754:2;;;2807:6;2799;2792:22;2754:2;2851:9;2838:23;2870:31;2895:5;2870:31;:::i;:::-;2920:5;2744:187;-1:-1:-1;;;2744:187:55:o;2936:553::-;3048:6;3056;3064;3117:2;3105:9;3096:7;3092:23;3088:32;3085:2;;;3138:6;3130;3123:22;3085:2;3175:9;3169:16;3194:31;3219:5;3194:31;:::i;:::-;3294:2;3279:18;;3273:25;3244:5;;-1:-1:-1;3307:33:55;3273:25;3307:33;:::i;:::-;3411:2;3396:18;;3390:25;3359:7;;-1:-1:-1;3424:33:55;3390:25;3424:33;:::i;:::-;3476:7;3466:17;;;3075:414;;;;;:::o;3494:1677::-;3767:6;3775;3783;3791;3799;3807;3815;3823;3831;3884:3;3872:9;3863:7;3859:23;3855:33;3852:2;;;3906:6;3898;3891:22;3852:2;3934:29;3953:9;3934:29;:::i;:::-;3924:39;;4010:2;3999:9;3995:18;3982:32;3972:42;;4065:2;4054:9;4050:18;4037:32;4088:18;4129:2;4121:6;4118:14;4115:2;;;4150:6;4142;4135:22;4115:2;4178:49;4219:7;4210:6;4199:9;4195:22;4178:49;:::i;:::-;4168:59;;4246:45;4287:2;4276:9;4272:18;4246:45;:::i;:::-;4236:55;;4344:3;4333:9;4329:19;4316:33;4300:49;;4374:2;4364:8;4361:16;4358:2;;;4395:6;4387;4380:22;4358:2;4423:63;4478:7;4467:8;4456:9;4452:24;4423:63;:::i;:::-;4413:73;;4539:3;4528:9;4524:19;4511:33;4495:49;;4569:2;4559:8;4556:16;4553:2;;;4590:6;4582;4575:22;4553:2;4618:63;4673:7;4662:8;4651:9;4647:24;4618:63;:::i;:::-;4608:73;;4734:3;4723:9;4719:19;4706:33;4690:49;;4764:2;4754:8;4751:16;4748:2;;;4785:6;4777;4770:22;4748:2;4829:87;4908:7;4897:8;4886:9;4882:24;4829:87;:::i;:::-;4935:8;;-1:-1:-1;4803:113:55;-1:-1:-1;5023:3:55;5008:19;;4995:33;;-1:-1:-1;5040:16:55;;;5037:2;;;5074:6;5066;5059:22;5037:2;;5102:63;5157:7;5146:8;5135:9;5131:24;5102:63;:::i;:::-;5092:73;;;3842:1329;;;;;;;;;;;:::o;5176:297::-;5243:6;5296:2;5284:9;5275:7;5271:23;5267:32;5264:2;;;5317:6;5309;5302:22;5264:2;5354:9;5348:16;5407:5;5400:13;5393:21;5386:5;5383:32;5373:2;;5434:6;5426;5419:22;5478:340;5546:6;5599:2;5587:9;5578:7;5574:23;5570:32;5567:2;;;5620:6;5612;5605:22;5567:2;5665:9;5652:23;5698:18;5690:6;5687:30;5684:2;;;5735:6;5727;5720:22;5684:2;5763:49;5804:7;5795:6;5784:9;5780:22;5763:49;:::i;5823:258::-;5891:6;5899;5952:2;5940:9;5931:7;5927:23;5923:32;5920:2;;;5973:6;5965;5958:22;5920:2;-1:-1:-1;;6001:23:55;;;6071:2;6056:18;;;6043:32;;-1:-1:-1;5910:171:55:o;6086:475::-;6127:3;6165:5;6159:12;6192:6;6187:3;6180:19;6217:3;6229:162;6243:6;6240:1;6237:13;6229:162;;;6305:4;6361:13;;;6357:22;;6351:29;6333:11;;;6329:20;;6322:59;6258:12;6229:162;;;6409:6;6406:1;6403:13;6400:2;;;6475:3;6468:4;6459:6;6454:3;6450:16;6446:27;6439:40;6400:2;-1:-1:-1;6543:2:55;6522:15;-1:-1:-1;;6518:29:55;6509:39;;;;6550:4;6505:50;;6135:426;-1:-1:-1;;6135:426:55:o;6566:237::-;6647:1;6640:5;6637:12;6627:2;;6692:10;6687:3;6683:20;6680:1;6673:31;6727:4;6724:1;6717:15;6755:4;6752:1;6745:15;6627:2;6779:18;;6617:186::o;7016:490::-;7289:1;7285;7280:3;7276:11;7272:19;7264:6;7260:32;7249:9;7242:51;7329:6;7324:2;7313:9;7309:18;7302:34;7372:3;7367:2;7356:9;7352:18;7345:31;7223:4;7393:45;7433:3;7422:9;7418:19;7410:6;7393:45;:::i;:::-;7385:53;;7447;7496:2;7485:9;7481:18;7473:6;7447:53;:::i;:::-;7232:274;;;;;;;:::o;7511:1193::-;-1:-1:-1;;;;;8070:15:55;;;8052:34;;8117:2;8102:18;;8095:34;;;8002:3;8160:2;8145:18;;8138:30;;;-1:-1:-1;;8191:44:55;8216:18;;;8208:6;8191:44;:::i;:::-;8177:58;;8244:53;8293:2;8282:9;8278:18;8270:6;8244:53;:::i;:::-;8334:6;8328:3;8317:9;8313:19;8306:35;8378:6;8372:3;8361:9;8357:19;8350:35;8422:6;8416:3;8405:9;8401:19;8394:35;8478:2;8470:6;8466:15;8460:3;8449:9;8445:19;8438:44;8531:2;8523:6;8519:15;8513:3;8502:9;8498:19;8491:44;8584:9;8576:6;8572:22;8566:3;8555:9;8551:19;8544:51;8612:32;8637:6;8629;8612:32;:::i;:::-;8604:40;;8694:2;8685:7;8681:16;8675:3;8664:9;8660:19;8653:45;;;7982:722;;;;;;;;;;;;;;:::o;10768:410::-;10970:2;10952:21;;;11009:2;10989:18;;;10982:30;11048:34;11043:2;11028:18;;11021:62;-1:-1:-1;;;11114:2:55;11099:18;;11092:44;11168:3;11153:19;;10942:236::o;11884:356::-;12086:2;12068:21;;;12105:18;;;12098:30;12164:34;12159:2;12144:18;;12137:62;12231:2;12216:18;;12058:182::o;14345:621::-;14625:4;14667:3;14656:9;14652:19;14644:27;;14698:6;14687:9;14680:25;14741:6;14736:2;14725:9;14721:18;14714:34;14784:6;14779:2;14768:9;14764:18;14757:34;14827:6;14822:2;14811:9;14807:18;14800:34;14871:6;14865:3;14854:9;14850:19;14843:35;14929:6;14921;14915:3;14904:9;14900:19;14887:49;14958:1;14952:4;14945:15;14634:332;;;;;;;;;:::o;14971:275::-;15042:2;15036:9;-1:-1:-1;15088:13:55;;-1:-1:-1;;15084:27:55;15072:40;;15142:18;15127:34;;15163:22;;;15124:62;15121:2;;;15189:18;;:::i;:::-;15225:2;15218:22;15016:230;;-1:-1:-1;15016:230:55:o;15251:183::-;15311:4;15344:18;15336:6;15333:30;15330:2;;;15366:18;;:::i;:::-;-1:-1:-1;15411:1:55;15407:14;15423:4;15403:25;;15320:114::o;15439:128::-;15479:3;15510:1;15506:6;15503:1;15500:13;15497:2;;;15516:18;;:::i;:::-;-1:-1:-1;15552:9:55;;15487:80::o;15572:135::-;15611:3;-1:-1:-1;;15632:17:55;;15629:2;;;15652:18;;:::i;:::-;-1:-1:-1;15699:1:55;15688:13;;15619:88::o;15712:127::-;15773:10;15768:3;15764:20;15761:1;15754:31;15804:4;15801:1;15794:15;15828:4;15825:1;15818:15;15844:127;15905:10;15900:3;15896:20;15893:1;15886:31;15936:4;15933:1;15926:15;15960:4;15957:1;15950:15;15976:131;-1:-1:-1;;;;;16051:31:55;;16041:42;;16031:2;;16097:1;16094;16087:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "avatar()": "5aef7de6",
    "executeTransaction(address,uint256,bytes,uint8,uint256[],uint256[],uint256[8][],bytes32[])": "4d02da10",
    "getGuard()": "c9106389",
    "getThreshold()": "e75235b8",
    "groupId()": "a0f44c92",
    "guard()": "7ceab3b1",
    "joinAsSigner(uint256,bytes32)": "7a943918",
    "nonce()": "affed0e0",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "safe()": "186f0354",
    "semaphore()": "7b5d2534",
    "setAvatar(address)": "086cfca8",
    "setGuard(address)": "e19a9dd9",
    "setTarget(address)": "776d1a01",
    "setUp(bytes)": "a4f9edbf",
    "target()": "d4b83992",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_avatar\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_semaphore\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_groupId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guard_\",\"type\":\"address\"}],\"name\":\"NotIERC165Compliant\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignerAddFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousAvatar\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAvatar\",\"type\":\"address\"}],\"name\":\"AvatarSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"guard\",\"type\":\"address\"}],\"name\":\"ChangedGuard\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"NewTxn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"identityCommitment\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"username\",\"type\":\"bytes32\"}],\"name\":\"NewUser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousTarget\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTarget\",\"type\":\"address\"}],\"name\":\"TargetSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"avatar\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ZkSigModuleSetup\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"avatar\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"merkleTreeRoots\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nullifierHashes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[8][]\",\"name\":\"proofs\",\"type\":\"uint256[8][]\"},{\"internalType\":\"bytes32[]\",\"name\":\"votes\",\"type\":\"bytes32[]\"}],\"name\":\"executeTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGuard\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_guard\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"groupId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"guard\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"identityCommitment\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"username\",\"type\":\"bytes32\"}],\"name\":\"joinAsSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"safe\",\"outputs\":[{\"internalType\":\"contract GnosisSafe\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"semaphore\",\"outputs\":[{\"internalType\":\"contract ISemaphore\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_avatar\",\"type\":\"address\"}],\"name\":\"setAvatar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_guard\",\"type\":\"address\"}],\"name\":\"setGuard\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"setTarget\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initParams\",\"type\":\"bytes\"}],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_avatar\":\"Address of the avatar (e.g. a Safe) basically thing executing the functions (relayer)\",\"_groupId\":\"semaphore groupId\",\"_owner\":\"Address of the  owner\",\"_semaphore\":\"Address of the semaphore contract\",\"_target\":\"Address of the contract that will call exec function - PASS TRANSACTIONS TO\"}},\"executeTransaction(address,uint256,bytes,uint8,uint256[],uint256[],uint256[8][],bytes32[])\":{\"details\":\"Executes a transaction initated by the AMB\",\"params\":{\"data\":\"Data of the transaction that should be executed\",\"merkleTreeRoots\":\"merkle tree root\",\"nullifierHashes\":\"nullifier hash\",\"operation\":\"Operation (Call or Delegatecall) of the transaction that should be executed\",\"proofs\":\"We pass in the proof, verify it, and then execute \",\"to\":\"Target of the transaction that should be executed\",\"value\":\"Wei value of the transaction that should be executed\",\"votes\":\"the vote on the given transaction\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAvatar(address)\":{\"details\":\"Sets the avatar to a new avatar (`newAvatar`).\"},\"setGuard(address)\":{\"details\":\"Set a guard that checks transactions before execution.\",\"params\":{\"_guard\":\"The address of the guard to be used or the 0 address to disable the guard.\"}},\"setTarget(address)\":{\"details\":\"Sets the target to a new target (`newTarget`).\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"NotIERC165Compliant(address)\":[{\"notice\":\"`guard_` does not implement IERC165.\"}]},\"kind\":\"user\",\"methods\":{\"setAvatar(address)\":{\"notice\":\"Can only be called by the current owner.\"},\"setTarget(address)\":{\"notice\":\"Can only be called by the current owner.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/PrivateModule.sol\":\"PrivateModule\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@gnosis.pm/safe-contracts/=lib/safe-contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@semaphore-protocol/=lib/semaphore/packages/contracts/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":semaphore/=lib/semaphore/\",\":solmate/=lib/solmate/src/\",\":zodiac/=lib/zodiac/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x35b09b69aca3bc2633da8f47382a81ecf367efe57167a2114f60f9ec81988afa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dd39ae44599da9e6b59035de3cddcfaa8d7b2a45f1c887adf5a1e38315cf6cd\",\"dweb:/ipfs/QmcFVkc7m3MzxoiCWCb2yZuezqW7eQTEvnScNALXhdsyJu\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe9fa1beb63e4a09637701f783982ba80380d630d600c9cafe26b68bf58be1b2\",\"dweb:/ipfs/QmRA3GXhTWys88joD9x8xYhdjzvGwmDGLMMzGw3LxbSEge\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x828a6fb02c79a63dc5867427f355c0a9c65b4359fecadae73883154da550f6f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cebeae5077fc0a0aa17afa7dc646904ac4d35b06694c756cf50321adf59edd0\",\"dweb:/ipfs/QmZn8QydMVAZAjPyUThKtu2sp3JeDmRyi68WGBZbAQVtkR\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cc5f36034a77d105263ae6d8cc18b16260b4a0f6cdb1a26f21ba3670fdd06dd\",\"dweb:/ipfs/QmdJrJ2LoG546BkfyZPta96BNmaVBfqZoh8kq7PqHuQyPk\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"lib/safe-contracts/contracts/GnosisSafe.sol\":{\"keccak256\":\"0x08a8750ac2e42bdab1d7483ccc698b019a2b448b5296db2b0ecc5d318b2fe763\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://67ff79afa7060d3a18b25c6ad6420dcbee6b6f788e2afe937c91ab4d64e3ce27\",\"dweb:/ipfs/QmVtN8xjT7eoieeDfCiTstaja9n9KBG7qYdD9gfSDfrCg8\"]},\"lib/safe-contracts/contracts/base/Executor.sol\":{\"keccak256\":\"0x4d3a900673473466bc27413fdbb11aae60b5580b792c49411f01544e0b24fe08\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://71ada0590998f47d1ee9759aa190c82d4b348d59a2f582747650d9720245a309\",\"dweb:/ipfs/Qmb9UudLoJpPutHVP9pXd1poP5CqFf5sxVFuYw14SYfRFk\"]},\"lib/safe-contracts/contracts/base/FallbackManager.sol\":{\"keccak256\":\"0x1a6d2eab5094e4219408e502a47d560a09e0fdd9f947440e6708ea024741bc6a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://ea9bd1225c38a9f1383a9f2aa613d9b493bb7e851a01164e312b63cecc4dd3b3\",\"dweb:/ipfs/Qma4UN216kpt8Nn6MkqUFRNeyZEsuXqQcuPfj2wfQdRzxW\"]},\"lib/safe-contracts/contracts/base/GuardManager.sol\":{\"keccak256\":\"0x7496e28d7fb5b729f68f95db2ec9c54352ade263d51a3dcc7d2ac13edcae5508\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://31618b7dcfe9d67c21f0d68b5fb82f794461177ac19290f2c4dd7ebf1c2e8d75\",\"dweb:/ipfs/QmcQMfK7q56bJwNN3WmjmX6YV5CxDZ5UPXRXfTeJiPHnys\"]},\"lib/safe-contracts/contracts/base/ModuleManager.sol\":{\"keccak256\":\"0x5512760a0328309f82a71cbe2ac14e0942501b9d44d5fb417bd02174546672e5\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://763cf803a98a921d62ed51d7876a13aed63968c828f026ce2beb747d2631c0bc\",\"dweb:/ipfs/QmbHZoYsbkxC2kVCs4pQ4nRaFrcgU5X8FuLX7vV3qDR9Y5\"]},\"lib/safe-contracts/contracts/base/OwnerManager.sol\":{\"keccak256\":\"0x01a3d64cc0967f42ae63802409f5404d18352516ea2a6335005003d919ffcf12\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://91824103f2966612103705d6493290e193b0c0ca2bbe7141965184435dbb999b\",\"dweb:/ipfs/Qmd7u917v4DnD4hvQGAGbchVJ8A7pm1UCzCv7sAzQnRoi4\"]},\"lib/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d\",\"dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej\"]},\"lib/safe-contracts/contracts/common/EtherPaymentFallback.sol\":{\"keccak256\":\"0x1a7928d29877da84a3d0df846d5cd933d48ee095c1bde0aa044e249b12e27a72\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://962fc098cfdd8a43cc7d294c1105718ea985cacf1172ea0426f7370e2096b830\",\"dweb:/ipfs/QmdZrxJ7dSWuTjbrN133YiRDLwYQr21zLr3CqWWtowY9Gu\"]},\"lib/safe-contracts/contracts/common/SecuredTokenTransfer.sol\":{\"keccak256\":\"0x178682d8477da42936c7e8e24d39094c4ac08ecd8623794b9535d77001b665f1\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://2ae8a6d5c7d4cc19c3b957c8857e87e92a4570effebf32ba54184c2b8375a0a2\",\"dweb:/ipfs/QmVNgRcRVgQZriJm8KVXQvRbHQf74wH7ABmBNTjBTqBa8r\"]},\"lib/safe-contracts/contracts/common/SelfAuthorized.sol\":{\"keccak256\":\"0x59d36efca578b75541a776f62a0d0ef03712fc27b6647c3915c14b572106d7bc\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8530c6e0392415d42486847cd4368d30f6cac42051596330692a571fcdbb9e29\",\"dweb:/ipfs/QmWw51Pshw5t2sMKANzxtfNdBSQUyQQpfTr3Mi7oNJGk7U\"]},\"lib/safe-contracts/contracts/common/SignatureDecoder.sol\":{\"keccak256\":\"0xb3e2e3b9d17c47201414341d2ccfc6437bc09f31af6dddf4a7de1f6294543072\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://0ee25eaebfd78a167949dcef64e1425b257311211cba8ec2fc1b6216edf1bcbe\",\"dweb:/ipfs/QmYL4uXE8wqdv7YCkHQSTWAsjco1pi8sJbDASuodDmNCpt\"]},\"lib/safe-contracts/contracts/common/Singleton.sol\":{\"keccak256\":\"0x6e02c18998de8834dd7d69890cb6ede996b6f635d2337081a596d91e35e2c648\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://ce1dfe9f820352b6f95b350ac0b3fa8afc24ad77bffffc2c9e00462e2a41a666\",\"dweb:/ipfs/QmVr2dCUbNbg5e7UsgngGij5mybgkXcbf5e5cPhT21aFXA\"]},\"lib/safe-contracts/contracts/common/StorageAccessible.sol\":{\"keccak256\":\"0x40a5f239d9639d4e44cb195a8a2a0022bb27840e282990e6776d8581515ca7ed\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://22fa3b633e76e7d58736c841730a05f2c37a09f612e7e90dfd6c1f35722a9157\",\"dweb:/ipfs/QmTFhMtHEKkdzQdVN9gayKdEJY69HWoM7abW2dXEuWXF6i\"]},\"lib/safe-contracts/contracts/external/GnosisSafeMath.sol\":{\"keccak256\":\"0x2a2b4d74f5834a9437be0cd3254d7a676698fc78aa47941c2009470196998d98\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://ea04449ba8b78ec44f3463b68cbce971875626e91d028add50900c41101a1156\",\"dweb:/ipfs/QmR95ci4HVkJuyYGvYRHVpp6N3wefu5WVDhipKwRechWV6\"]},\"lib/safe-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x5c64c2e071245db8fe3ea8b94f73c5a8de236933858ae240348d502433a9d178\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://46a7796e0c5c451b86038253d488ffb0986472d17d0fb74e00c3809682f2fd7a\",\"dweb:/ipfs/QmX7tYoCRrCLGqsZSHXgdcqbRhMGXpS6ezckaFjaiULd3e\"]},\"lib/safe-contracts/contracts/interfaces/ISignatureValidator.sol\":{\"keccak256\":\"0x5b6e9bf17f28738ce88e751f420b0559f5151ba7bec2ff3c7bb31e42673d6801\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://bfdde8390deb619e38f98be67c5f9d26f12623855540af76b9f454142d3896c1\",\"dweb:/ipfs/QmZrr1ocToR5S62W177qV2csfs7wCQNs3t9vatyx32uLXz\"]},\"lib/semaphore/packages/contracts/contracts/interfaces/ISemaphore.sol\":{\"keccak256\":\"0x961a6fc622ac10342e076cb8c1aa30363cf7222370c10bacc10c053b3c2b400f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40f159b9ddb717f9fc46205db070bb566fed698f9ad0f30cab80432486afaa5e\",\"dweb:/ipfs/QmPYS2EzGDG9gMGwJndzi43z9wiGSXdXdfRNZtEsfVVZnK\"]},\"lib/zodiac/contracts/core/Module.sol\":{\"keccak256\":\"0x1b9b6f3b43db68f3c142b326544115d1b1fa1f319c980922ea0a29aa80f53664\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://89c48fe4addf27af8b1cbc3cad8a0b27fde67d0de8b29aba811b9d4cb97c6112\",\"dweb:/ipfs/QmNoJhTbtVv2J237BsMPfuNwSkPAq6zsAr2FNrnUkVBp3X\"]},\"lib/zodiac/contracts/factory/FactoryFriendly.sol\":{\"keccak256\":\"0x96e61585b7340a901a54eb4c157ce28b630bff3d9d4597dfaac692128ea458c4\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://26252f06a8f31d7fe771b50fde9a6338133750bf05f7fc421dfa70c1df25ed7b\",\"dweb:/ipfs/QmQrZ4Zgvi3andou57Be9qpMmZatMx88rMxp3DPwUaFPsR\"]},\"lib/zodiac/contracts/guard/BaseGuard.sol\":{\"keccak256\":\"0xa825848d06a1fc3cb7ad86727c669c8fc6b3bd8dbe419a617830ddcd5e245e47\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://58bd190f4bb876471908d6145c6bebb9a22b5c9183192ffe199f4d94753f36bb\",\"dweb:/ipfs/QmYioir1PsjbCWAdCrFGJQiGHZM65umtb8qUSa63cb5Djq\"]},\"lib/zodiac/contracts/guard/Guardable.sol\":{\"keccak256\":\"0xebdcfbe7f0822d8afcc21a1ca8d809417b438cc8b27c3547190a1627a9f5110f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://b1c6c35a0ed50d561d819c60423b7a5e6c7cbeaf61c5e0b83dab210def1dd4ec\",\"dweb:/ipfs/QmSz8F6MtuYZMvMJDmfpt8VxHFeVexqS7mpWJE6kuJ8ZAF\"]},\"lib/zodiac/contracts/interfaces/IAvatar.sol\":{\"keccak256\":\"0xcd5508ffe596eef8fbccfd5fc4f10a34397773547ce64e212d48b5212865ec1f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://1655ba8b760132ebd702cc806fcdad50a44d320fbeca14be00e35b0171bd35cf\",\"dweb:/ipfs/QmcbB5HpCoEQCTHKWxHS3HpFmgaB4AcZxZYtvQk2QEyvN2\"]},\"lib/zodiac/contracts/interfaces/IGuard.sol\":{\"keccak256\":\"0xd0d855accbc5fba81c67ab22cdbb03325a8a4d7f6b7e981d1ff0fec3178e464d\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://4b51c586b33cc97caebe85472855bbb4c56a4e387b14cde2c8110b12ace7ba6b\",\"dweb:/ipfs/QmYtVdNKa5D2A4cEdTg9cYwrDio7TdNKtbAHc86x33W5wt\"]},\"src/PrivateModule.sol\":{\"keccak256\":\"0xf7852ae92774d7c3e9a54a2dba532c13e9020e6de1893df8f9188977b9d2f7a8\",\"urls\":[\"bzz-raw://1bd79c6a22c1e5cf712c64eb3d4380252a57328e36daa372551660831ffd55a9\",\"dweb:/ipfs/QmPtAw3HwBLNNC3trNExn34hXy9Dsm2o3vxKGAQ7Dd4tLJ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.4+commit.c7e474f2"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "_avatar",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "_target",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_semaphore",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_groupId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "guard_",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "NotIERC165Compliant"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SignerAddFailed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAvatar",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newAvatar",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AvatarSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "guard",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ChangedGuard",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "NewTxn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "identityCommitment",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "username",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewUser",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousTarget",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newTarget",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TargetSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initiator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "avatar",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ZkSigModuleSetup",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "avatar",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "enum Enum.Operation",
              "name": "operation",
              "type": "uint8"
            },
            {
              "internalType": "uint256[]",
              "name": "merkleTreeRoots",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "nullifierHashes",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[8][]",
              "name": "proofs",
              "type": "uint256[8][]"
            },
            {
              "internalType": "bytes32[]",
              "name": "votes",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeTransaction"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getGuard",
          "outputs": [
            {
              "internalType": "address",
              "name": "_guard",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getThreshold",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "groupId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "guard",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "identityCommitment",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "username",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "joinAsSigner"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "safe",
          "outputs": [
            {
              "internalType": "contract GnosisSafe",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "semaphore",
          "outputs": [
            {
              "internalType": "contract ISemaphore",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_avatar",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAvatar"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_guard",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGuard"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTarget"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "initParams",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "target",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "_avatar": "Address of the avatar (e.g. a Safe) basically thing executing the functions (relayer)",
              "_groupId": "semaphore groupId",
              "_owner": "Address of the  owner",
              "_semaphore": "Address of the semaphore contract",
              "_target": "Address of the contract that will call exec function - PASS TRANSACTIONS TO"
            }
          },
          "executeTransaction(address,uint256,bytes,uint8,uint256[],uint256[],uint256[8][],bytes32[])": {
            "details": "Executes a transaction initated by the AMB",
            "params": {
              "data": "Data of the transaction that should be executed",
              "merkleTreeRoots": "merkle tree root",
              "nullifierHashes": "nullifier hash",
              "operation": "Operation (Call or Delegatecall) of the transaction that should be executed",
              "proofs": "We pass in the proof, verify it, and then execute ",
              "to": "Target of the transaction that should be executed",
              "value": "Wei value of the transaction that should be executed",
              "votes": "the vote on the given transaction"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setAvatar(address)": {
            "details": "Sets the avatar to a new avatar (`newAvatar`)."
          },
          "setGuard(address)": {
            "details": "Set a guard that checks transactions before execution.",
            "params": {
              "_guard": "The address of the guard to be used or the 0 address to disable the guard."
            }
          },
          "setTarget(address)": {
            "details": "Sets the target to a new target (`newTarget`)."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "setAvatar(address)": {
            "notice": "Can only be called by the current owner."
          },
          "setTarget(address)": {
            "notice": "Can only be called by the current owner."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@gnosis.pm/=node_modules/@gnosis.pm/",
        ":@gnosis.pm/safe-contracts/=lib/safe-contracts/",
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@semaphore-protocol/=lib/semaphore/packages/contracts/",
        ":ds-test/=lib/solmate/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":safe-contracts/=lib/safe-contracts/contracts/",
        ":semaphore/=lib/semaphore/",
        ":solmate/=lib/solmate/src/",
        ":zodiac/=lib/zodiac/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/PrivateModule.sol": "PrivateModule"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x35b09b69aca3bc2633da8f47382a81ecf367efe57167a2114f60f9ec81988afa",
        "urls": [
          "bzz-raw://4dd39ae44599da9e6b59035de3cddcfaa8d7b2a45f1c887adf5a1e38315cf6cd",
          "dweb:/ipfs/QmcFVkc7m3MzxoiCWCb2yZuezqW7eQTEvnScNALXhdsyJu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9",
        "urls": [
          "bzz-raw://fe9fa1beb63e4a09637701f783982ba80380d630d600c9cafe26b68bf58be1b2",
          "dweb:/ipfs/QmRA3GXhTWys88joD9x8xYhdjzvGwmDGLMMzGw3LxbSEge"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x828a6fb02c79a63dc5867427f355c0a9c65b4359fecadae73883154da550f6f8",
        "urls": [
          "bzz-raw://9cebeae5077fc0a0aa17afa7dc646904ac4d35b06694c756cf50321adf59edd0",
          "dweb:/ipfs/QmZn8QydMVAZAjPyUThKtu2sp3JeDmRyi68WGBZbAQVtkR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a",
        "urls": [
          "bzz-raw://6cc5f36034a77d105263ae6d8cc18b16260b4a0f6cdb1a26f21ba3670fdd06dd",
          "dweb:/ipfs/QmdJrJ2LoG546BkfyZPta96BNmaVBfqZoh8kq7PqHuQyPk"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4",
        "urls": [
          "bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6",
          "dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx"
        ],
        "license": "MIT"
      },
      "lib/safe-contracts/contracts/GnosisSafe.sol": {
        "keccak256": "0x08a8750ac2e42bdab1d7483ccc698b019a2b448b5296db2b0ecc5d318b2fe763",
        "urls": [
          "bzz-raw://67ff79afa7060d3a18b25c6ad6420dcbee6b6f788e2afe937c91ab4d64e3ce27",
          "dweb:/ipfs/QmVtN8xjT7eoieeDfCiTstaja9n9KBG7qYdD9gfSDfrCg8"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/Executor.sol": {
        "keccak256": "0x4d3a900673473466bc27413fdbb11aae60b5580b792c49411f01544e0b24fe08",
        "urls": [
          "bzz-raw://71ada0590998f47d1ee9759aa190c82d4b348d59a2f582747650d9720245a309",
          "dweb:/ipfs/Qmb9UudLoJpPutHVP9pXd1poP5CqFf5sxVFuYw14SYfRFk"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/FallbackManager.sol": {
        "keccak256": "0x1a6d2eab5094e4219408e502a47d560a09e0fdd9f947440e6708ea024741bc6a",
        "urls": [
          "bzz-raw://ea9bd1225c38a9f1383a9f2aa613d9b493bb7e851a01164e312b63cecc4dd3b3",
          "dweb:/ipfs/Qma4UN216kpt8Nn6MkqUFRNeyZEsuXqQcuPfj2wfQdRzxW"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/GuardManager.sol": {
        "keccak256": "0x7496e28d7fb5b729f68f95db2ec9c54352ade263d51a3dcc7d2ac13edcae5508",
        "urls": [
          "bzz-raw://31618b7dcfe9d67c21f0d68b5fb82f794461177ac19290f2c4dd7ebf1c2e8d75",
          "dweb:/ipfs/QmcQMfK7q56bJwNN3WmjmX6YV5CxDZ5UPXRXfTeJiPHnys"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/ModuleManager.sol": {
        "keccak256": "0x5512760a0328309f82a71cbe2ac14e0942501b9d44d5fb417bd02174546672e5",
        "urls": [
          "bzz-raw://763cf803a98a921d62ed51d7876a13aed63968c828f026ce2beb747d2631c0bc",
          "dweb:/ipfs/QmbHZoYsbkxC2kVCs4pQ4nRaFrcgU5X8FuLX7vV3qDR9Y5"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/OwnerManager.sol": {
        "keccak256": "0x01a3d64cc0967f42ae63802409f5404d18352516ea2a6335005003d919ffcf12",
        "urls": [
          "bzz-raw://91824103f2966612103705d6493290e193b0c0ca2bbe7141965184435dbb999b",
          "dweb:/ipfs/Qmd7u917v4DnD4hvQGAGbchVJ8A7pm1UCzCv7sAzQnRoi4"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/Enum.sol": {
        "keccak256": "0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f",
        "urls": [
          "bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d",
          "dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/EtherPaymentFallback.sol": {
        "keccak256": "0x1a7928d29877da84a3d0df846d5cd933d48ee095c1bde0aa044e249b12e27a72",
        "urls": [
          "bzz-raw://962fc098cfdd8a43cc7d294c1105718ea985cacf1172ea0426f7370e2096b830",
          "dweb:/ipfs/QmdZrxJ7dSWuTjbrN133YiRDLwYQr21zLr3CqWWtowY9Gu"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/SecuredTokenTransfer.sol": {
        "keccak256": "0x178682d8477da42936c7e8e24d39094c4ac08ecd8623794b9535d77001b665f1",
        "urls": [
          "bzz-raw://2ae8a6d5c7d4cc19c3b957c8857e87e92a4570effebf32ba54184c2b8375a0a2",
          "dweb:/ipfs/QmVNgRcRVgQZriJm8KVXQvRbHQf74wH7ABmBNTjBTqBa8r"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/SelfAuthorized.sol": {
        "keccak256": "0x59d36efca578b75541a776f62a0d0ef03712fc27b6647c3915c14b572106d7bc",
        "urls": [
          "bzz-raw://8530c6e0392415d42486847cd4368d30f6cac42051596330692a571fcdbb9e29",
          "dweb:/ipfs/QmWw51Pshw5t2sMKANzxtfNdBSQUyQQpfTr3Mi7oNJGk7U"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/SignatureDecoder.sol": {
        "keccak256": "0xb3e2e3b9d17c47201414341d2ccfc6437bc09f31af6dddf4a7de1f6294543072",
        "urls": [
          "bzz-raw://0ee25eaebfd78a167949dcef64e1425b257311211cba8ec2fc1b6216edf1bcbe",
          "dweb:/ipfs/QmYL4uXE8wqdv7YCkHQSTWAsjco1pi8sJbDASuodDmNCpt"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/Singleton.sol": {
        "keccak256": "0x6e02c18998de8834dd7d69890cb6ede996b6f635d2337081a596d91e35e2c648",
        "urls": [
          "bzz-raw://ce1dfe9f820352b6f95b350ac0b3fa8afc24ad77bffffc2c9e00462e2a41a666",
          "dweb:/ipfs/QmVr2dCUbNbg5e7UsgngGij5mybgkXcbf5e5cPhT21aFXA"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/StorageAccessible.sol": {
        "keccak256": "0x40a5f239d9639d4e44cb195a8a2a0022bb27840e282990e6776d8581515ca7ed",
        "urls": [
          "bzz-raw://22fa3b633e76e7d58736c841730a05f2c37a09f612e7e90dfd6c1f35722a9157",
          "dweb:/ipfs/QmTFhMtHEKkdzQdVN9gayKdEJY69HWoM7abW2dXEuWXF6i"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/external/GnosisSafeMath.sol": {
        "keccak256": "0x2a2b4d74f5834a9437be0cd3254d7a676698fc78aa47941c2009470196998d98",
        "urls": [
          "bzz-raw://ea04449ba8b78ec44f3463b68cbce971875626e91d028add50900c41101a1156",
          "dweb:/ipfs/QmR95ci4HVkJuyYGvYRHVpp6N3wefu5WVDhipKwRechWV6"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x5c64c2e071245db8fe3ea8b94f73c5a8de236933858ae240348d502433a9d178",
        "urls": [
          "bzz-raw://46a7796e0c5c451b86038253d488ffb0986472d17d0fb74e00c3809682f2fd7a",
          "dweb:/ipfs/QmX7tYoCRrCLGqsZSHXgdcqbRhMGXpS6ezckaFjaiULd3e"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/interfaces/ISignatureValidator.sol": {
        "keccak256": "0x5b6e9bf17f28738ce88e751f420b0559f5151ba7bec2ff3c7bb31e42673d6801",
        "urls": [
          "bzz-raw://bfdde8390deb619e38f98be67c5f9d26f12623855540af76b9f454142d3896c1",
          "dweb:/ipfs/QmZrr1ocToR5S62W177qV2csfs7wCQNs3t9vatyx32uLXz"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/semaphore/packages/contracts/contracts/interfaces/ISemaphore.sol": {
        "keccak256": "0x961a6fc622ac10342e076cb8c1aa30363cf7222370c10bacc10c053b3c2b400f",
        "urls": [
          "bzz-raw://40f159b9ddb717f9fc46205db070bb566fed698f9ad0f30cab80432486afaa5e",
          "dweb:/ipfs/QmPYS2EzGDG9gMGwJndzi43z9wiGSXdXdfRNZtEsfVVZnK"
        ],
        "license": "MIT"
      },
      "lib/zodiac/contracts/core/Module.sol": {
        "keccak256": "0x1b9b6f3b43db68f3c142b326544115d1b1fa1f319c980922ea0a29aa80f53664",
        "urls": [
          "bzz-raw://89c48fe4addf27af8b1cbc3cad8a0b27fde67d0de8b29aba811b9d4cb97c6112",
          "dweb:/ipfs/QmNoJhTbtVv2J237BsMPfuNwSkPAq6zsAr2FNrnUkVBp3X"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/zodiac/contracts/factory/FactoryFriendly.sol": {
        "keccak256": "0x96e61585b7340a901a54eb4c157ce28b630bff3d9d4597dfaac692128ea458c4",
        "urls": [
          "bzz-raw://26252f06a8f31d7fe771b50fde9a6338133750bf05f7fc421dfa70c1df25ed7b",
          "dweb:/ipfs/QmQrZ4Zgvi3andou57Be9qpMmZatMx88rMxp3DPwUaFPsR"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/zodiac/contracts/guard/BaseGuard.sol": {
        "keccak256": "0xa825848d06a1fc3cb7ad86727c669c8fc6b3bd8dbe419a617830ddcd5e245e47",
        "urls": [
          "bzz-raw://58bd190f4bb876471908d6145c6bebb9a22b5c9183192ffe199f4d94753f36bb",
          "dweb:/ipfs/QmYioir1PsjbCWAdCrFGJQiGHZM65umtb8qUSa63cb5Djq"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/zodiac/contracts/guard/Guardable.sol": {
        "keccak256": "0xebdcfbe7f0822d8afcc21a1ca8d809417b438cc8b27c3547190a1627a9f5110f",
        "urls": [
          "bzz-raw://b1c6c35a0ed50d561d819c60423b7a5e6c7cbeaf61c5e0b83dab210def1dd4ec",
          "dweb:/ipfs/QmSz8F6MtuYZMvMJDmfpt8VxHFeVexqS7mpWJE6kuJ8ZAF"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/zodiac/contracts/interfaces/IAvatar.sol": {
        "keccak256": "0xcd5508ffe596eef8fbccfd5fc4f10a34397773547ce64e212d48b5212865ec1f",
        "urls": [
          "bzz-raw://1655ba8b760132ebd702cc806fcdad50a44d320fbeca14be00e35b0171bd35cf",
          "dweb:/ipfs/QmcbB5HpCoEQCTHKWxHS3HpFmgaB4AcZxZYtvQk2QEyvN2"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/zodiac/contracts/interfaces/IGuard.sol": {
        "keccak256": "0xd0d855accbc5fba81c67ab22cdbb03325a8a4d7f6b7e981d1ff0fec3178e464d",
        "urls": [
          "bzz-raw://4b51c586b33cc97caebe85472855bbb4c56a4e387b14cde2c8110b12ace7ba6b",
          "dweb:/ipfs/QmYtVdNKa5D2A4cEdTg9cYwrDio7TdNKtbAHc86x33W5wt"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/PrivateModule.sol": {
        "keccak256": "0xf7852ae92774d7c3e9a54a2dba532c13e9020e6de1893df8f9188977b9d2f7a8",
        "urls": [
          "bzz-raw://1bd79c6a22c1e5cf712c64eb3d4380252a57328e36daa372551660831ffd55a9",
          "dweb:/ipfs/QmPtAw3HwBLNNC3trNExn34hXy9Dsm2o3vxKGAQ7Dd4tLJ"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/PrivateModule.sol",
    "id": 25686,
    "exportedSymbols": {
      "BaseGuard": [
        22682
      ],
      "ContextUpgradeable": [
        19978
      ],
      "Enum": [
        25912
      ],
      "FactoryFriendly": [
        22617
      ],
      "GnosisSafe": [
        26865
      ],
      "Guardable": [
        22750
      ],
      "IAvatar": [
        22837
      ],
      "IERC165": [
        20030
      ],
      "IGuard": [
        22874
      ],
      "ISemaphore": [
        20183
      ],
      "Initializable": [
        19935
      ],
      "Module": [
        22606
      ],
      "OwnableUpgradeable": [
        19889
      ],
      "PrivateModule": [
        25685
      ],
      "ReentrancyGuard": [
        20018
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:4989:52",
    "nodes": [
      {
        "id": 25278,
        "nodeType": "PragmaDirective",
        "src": "0:23:52",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 25279,
        "nodeType": "ImportDirective",
        "src": "25:32:52",
        "nodes": [],
        "absolutePath": "lib/zodiac/contracts/core/Module.sol",
        "file": "zodiac/core/Module.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25686,
        "sourceUnit": 22607,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25280,
        "nodeType": "ImportDirective",
        "src": "58:62:52",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25686,
        "sourceUnit": 20019,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25281,
        "nodeType": "ImportDirective",
        "src": "121:65:52",
        "nodes": [],
        "absolutePath": "lib/semaphore/packages/contracts/contracts/interfaces/ISemaphore.sol",
        "file": "@semaphore-protocol/contracts/interfaces/ISemaphore.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25686,
        "sourceUnit": 20184,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25283,
        "nodeType": "ImportDirective",
        "src": "187:78:52",
        "nodes": [],
        "absolutePath": "lib/safe-contracts/contracts/GnosisSafe.sol",
        "file": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25686,
        "sourceUnit": 26866,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25282,
              "name": "GnosisSafe",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "195:10:52",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25685,
        "nodeType": "ContractDefinition",
        "src": "267:4722:52",
        "nodes": [
          {
            "id": 25290,
            "nodeType": "VariableDeclaration",
            "src": "322:27:52",
            "nodes": [],
            "constant": false,
            "functionSelector": "7b5d2534",
            "mutability": "mutable",
            "name": "semaphore",
            "nameLocation": "340:9:52",
            "scope": 25685,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISemaphore_$20183",
              "typeString": "contract ISemaphore"
            },
            "typeName": {
              "id": 25289,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25288,
                "name": "ISemaphore",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 20183,
                "src": "322:10:52"
              },
              "referencedDeclaration": 20183,
              "src": "322:10:52",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISemaphore_$20183",
                "typeString": "contract ISemaphore"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25293,
            "nodeType": "VariableDeclaration",
            "src": "353:22:52",
            "nodes": [],
            "constant": false,
            "functionSelector": "186f0354",
            "mutability": "mutable",
            "name": "safe",
            "nameLocation": "371:4:52",
            "scope": 25685,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GnosisSafe_$26865",
              "typeString": "contract GnosisSafe"
            },
            "typeName": {
              "id": 25292,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25291,
                "name": "GnosisSafe",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 26865,
                "src": "353:10:52"
              },
              "referencedDeclaration": 26865,
              "src": "353:10:52",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GnosisSafe_$26865",
                "typeString": "contract GnosisSafe"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25295,
            "nodeType": "VariableDeclaration",
            "src": "380:22:52",
            "nodes": [],
            "constant": false,
            "functionSelector": "a0f44c92",
            "mutability": "mutable",
            "name": "groupId",
            "nameLocation": "395:7:52",
            "scope": 25685,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25294,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "380:7:52",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25297,
            "nodeType": "VariableDeclaration",
            "src": "406:17:52",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "threshold",
            "nameLocation": "414:9:52",
            "scope": 25685,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25296,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "406:7:52",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 25299,
            "nodeType": "VariableDeclaration",
            "src": "427:20:52",
            "nodes": [],
            "constant": false,
            "functionSelector": "affed0e0",
            "mutability": "mutable",
            "name": "nonce",
            "nameLocation": "442:5:52",
            "scope": 25685,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25298,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "427:7:52",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25303,
            "nodeType": "VariableDeclaration",
            "src": "495:33:52",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "users",
            "nameLocation": "523:5:52",
            "scope": 25685,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
              "typeString": "mapping(uint256 => bytes32)"
            },
            "typeName": {
              "id": 25302,
              "keyType": {
                "id": 25300,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "503:7:52",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "495:27:52",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                "typeString": "mapping(uint256 => bytes32)"
              },
              "valueType": {
                "id": 25301,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "514:7:52",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 25307,
            "nodeType": "VariableDeclaration",
            "src": "685:39:52",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "possibleMember",
            "nameLocation": "710:14:52",
            "scope": 25685,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 25306,
              "keyType": {
                "id": 25304,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "693:7:52",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "685:24:52",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 25305,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "704:4:52",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 25309,
            "nodeType": "EventDefinition",
            "src": "730:15:52",
            "nodes": [],
            "anonymous": false,
            "name": "NewTxn",
            "nameLocation": "736:6:52",
            "parameters": {
              "id": 25308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "742:2:52"
            }
          },
          {
            "id": 25315,
            "nodeType": "EventDefinition",
            "src": "748:60:52",
            "nodes": [],
            "anonymous": false,
            "name": "NewUser",
            "nameLocation": "754:7:52",
            "parameters": {
              "id": 25314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25311,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "identityCommitment",
                  "nameLocation": "770:18:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 25315,
                  "src": "762:26:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "762:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25313,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "username",
                  "nameLocation": "798:8:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 25315,
                  "src": "790:16:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25312,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "790:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "761:46:52"
            }
          },
          {
            "id": 25325,
            "nodeType": "EventDefinition",
            "src": "811:133:52",
            "nodes": [],
            "anonymous": false,
            "name": "ZkSigModuleSetup",
            "nameLocation": "817:16:52",
            "parameters": {
              "id": 25324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25317,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "initiator",
                  "nameLocation": "855:9:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 25325,
                  "src": "839:25:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25316,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25319,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "886:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 25325,
                  "src": "870:21:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25318,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "870:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25321,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "avatar",
                  "nameLocation": "913:6:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 25325,
                  "src": "897:22:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "897:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25323,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "933:6:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 25325,
                  "src": "925:14:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25322,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "925:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "833:110:52"
            }
          },
          {
            "id": 25327,
            "nodeType": "ErrorDefinition",
            "src": "948:24:52",
            "nodes": [],
            "name": "SignerAddFailed",
            "nameLocation": "954:15:52",
            "parameters": {
              "id": 25326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "969:2:52"
            }
          },
          {
            "id": 25396,
            "nodeType": "FunctionDefinition",
            "src": "1320:494:52",
            "nodes": [],
            "body": {
              "id": 25395,
              "nodeType": "Block",
              "src": "1461:353:52",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    25342
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25342,
                      "mutability": "mutable",
                      "name": "initParams",
                      "nameLocation": "1481:10:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 25395,
                      "src": "1468:23:52",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 25341,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1468:5:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25349,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25345,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25330,
                        "src": "1512:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25346,
                        "name": "_avatar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25332,
                        "src": "1526:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 25347,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25334,
                        "src": "1541:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 25343,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1494:3:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 25344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "1494:10:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 25348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1494:60:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1468:86:52"
                },
                {
                  "expression": {
                    "id": 25354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25350,
                      "name": "semaphore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25290,
                      "src": "1561:9:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISemaphore_$20183",
                        "typeString": "contract ISemaphore"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25352,
                          "name": "_semaphore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25336,
                          "src": "1584:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 25351,
                        "name": "ISemaphore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20183,
                        "src": "1573:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISemaphore_$20183_$",
                          "typeString": "type(contract ISemaphore)"
                        }
                      },
                      "id": 25353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1573:22:52",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISemaphore_$20183",
                        "typeString": "contract ISemaphore"
                      }
                    },
                    "src": "1561:34:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISemaphore_$20183",
                      "typeString": "contract ISemaphore"
                    }
                  },
                  "id": 25355,
                  "nodeType": "ExpressionStatement",
                  "src": "1561:34:52"
                },
                {
                  "expression": {
                    "id": 25360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25356,
                      "name": "safe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25293,
                      "src": "1601:4:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GnosisSafe_$26865",
                        "typeString": "contract GnosisSafe"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25358,
                          "name": "_avatar",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25332,
                          "src": "1619:7:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 25357,
                        "name": "GnosisSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26865,
                        "src": "1608:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_GnosisSafe_$26865_$",
                          "typeString": "type(contract GnosisSafe)"
                        }
                      },
                      "id": 25359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1608:19:52",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GnosisSafe_$26865",
                        "typeString": "contract GnosisSafe"
                      }
                    },
                    "src": "1601:26:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GnosisSafe_$26865",
                      "typeString": "contract GnosisSafe"
                    }
                  },
                  "id": 25361,
                  "nodeType": "ExpressionStatement",
                  "src": "1601:26:52"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 25362,
                      "name": "setAllowedOwners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25502,
                      "src": "1633:16:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 25363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1633:18:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25364,
                  "nodeType": "ExpressionStatement",
                  "src": "1633:18:52"
                },
                {
                  "expression": {
                    "id": 25367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25365,
                      "name": "groupId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25295,
                      "src": "1657:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25366,
                      "name": "_groupId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25338,
                      "src": "1667:8:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1657:18:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25368,
                  "nodeType": "ExpressionStatement",
                  "src": "1657:18:52"
                },
                {
                  "expression": {
                    "id": 25373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25369,
                      "name": "threshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25297,
                      "src": "1681:9:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 25370,
                          "name": "safe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25293,
                          "src": "1693:4:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GnosisSafe_$26865",
                            "typeString": "contract GnosisSafe"
                          }
                        },
                        "id": 25371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getThreshold",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 27849,
                        "src": "1693:17:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 25372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1693:19:52",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1681:31:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25374,
                  "nodeType": "ExpressionStatement",
                  "src": "1681:31:52"
                },
                {
                  "expression": {
                    "id": 25377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25375,
                      "name": "nonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25299,
                      "src": "1718:5:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 25376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1726:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1718:9:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25378,
                  "nodeType": "ExpressionStatement",
                  "src": "1718:9:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25382,
                        "name": "groupId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25295,
                        "src": "1755:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3230",
                        "id": 25383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1764:2:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        },
                        "value": "20"
                      },
                      {
                        "hexValue": "30",
                        "id": 25384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1768:1:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 25387,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1779:4:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PrivateModule_$25685",
                              "typeString": "contract PrivateModule"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PrivateModule_$25685",
                              "typeString": "contract PrivateModule"
                            }
                          ],
                          "id": 25386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1771:7:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25385,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1771:7:52",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1771:13:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25379,
                        "name": "semaphore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25290,
                        "src": "1733:9:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISemaphore_$20183",
                          "typeString": "contract ISemaphore"
                        }
                      },
                      "id": 25381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createGroup",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20113,
                      "src": "1733:21:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,address) external"
                      }
                    },
                    "id": 25389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1733:52:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25390,
                  "nodeType": "ExpressionStatement",
                  "src": "1733:52:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25392,
                        "name": "initParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25342,
                        "src": "1798:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 25391,
                      "name": "setUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        25464
                      ],
                      "referencedDeclaration": 25464,
                      "src": "1792:5:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 25393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1792:17:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25394,
                  "nodeType": "ExpressionStatement",
                  "src": "1792:17:52"
                }
              ]
            },
            "documentation": {
              "id": 25328,
              "nodeType": "StructuredDocumentation",
              "src": "976:341:52",
              "text": "@param _owner Address of the  owner\n @param _avatar Address of the avatar (e.g. a Safe) basically thing executing the functions (relayer)\n @param _target Address of the contract that will call exec function - PASS TRANSACTIONS TO\n @param _semaphore Address of the semaphore contract\n @param _groupId semaphore groupId"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 25339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25330,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1345:6:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 25396,
                  "src": "1337:14:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25329,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1337:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25332,
                  "mutability": "mutable",
                  "name": "_avatar",
                  "nameLocation": "1373:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 25396,
                  "src": "1357:23:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 25331,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1357:15:52",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25334,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "1402:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 25396,
                  "src": "1386:23:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 25333,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1386:15:52",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25336,
                  "mutability": "mutable",
                  "name": "_semaphore",
                  "nameLocation": "1423:10:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 25396,
                  "src": "1415:18:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25335,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1415:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25338,
                  "mutability": "mutable",
                  "name": "_groupId",
                  "nameLocation": "1447:8:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 25396,
                  "src": "1439:16:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25337,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1439:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1331:128:52"
            },
            "returnParameters": {
              "id": 25340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1461:0:52"
            },
            "scope": 25685,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25464,
            "nodeType": "FunctionDefinition",
            "src": "1818:528:52",
            "nodes": [],
            "body": {
              "id": 25463,
              "nodeType": "Block",
              "src": "1874:472:52",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    25403,
                    25405,
                    25407
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25403,
                      "mutability": "mutable",
                      "name": "_owner",
                      "nameLocation": "1896:6:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 25463,
                      "src": "1888:14:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 25402,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1888:7:52",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 25405,
                      "mutability": "mutable",
                      "name": "_avatar",
                      "nameLocation": "1918:7:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 25463,
                      "src": "1910:15:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 25404,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1910:7:52",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 25407,
                      "mutability": "mutable",
                      "name": "_target",
                      "nameLocation": "1941:7:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 25463,
                      "src": "1933:15:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 25406,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1933:7:52",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25419,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25410,
                        "name": "initParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25398,
                        "src": "1977:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 25412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1998:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25411,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1998:7:52",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 25414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2007:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25413,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2007:7:52",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 25416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2016:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25415,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2016:7:52",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 25417,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1997:27:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$",
                          "typeString": "tuple(type(address),type(address),type(address))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$",
                          "typeString": "tuple(type(address),type(address),type(address))"
                        }
                      ],
                      "expression": {
                        "id": 25408,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1957:3:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 25409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1957:10:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 25418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1957:75:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_address_payable_$",
                      "typeString": "tuple(address payable,address payable,address payable)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1880:152:52"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 25420,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19794,
                      "src": "2038:14:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 25421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2038:16:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25422,
                  "nodeType": "ExpressionStatement",
                  "src": "2038:16:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25424,
                          "name": "_avatar",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25405,
                          "src": "2069:7:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 25427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2088:1:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2080:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25425,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2080:7:52",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2080:10:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2069:21:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4176617461722063616e206e6f74206265207a65726f2061646472657373",
                        "id": 25430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2092:32:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0407ba27e27ea2e22b92fe4c794bc63dbbbafa9df68697cacfa1f5c86c94a8b",
                          "typeString": "literal_string \"Avatar can not be zero address\""
                        },
                        "value": "Avatar can not be zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0407ba27e27ea2e22b92fe4c794bc63dbbbafa9df68697cacfa1f5c86c94a8b",
                          "typeString": "literal_string \"Avatar can not be zero address\""
                        }
                      ],
                      "id": 25423,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2061:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2061:64:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25432,
                  "nodeType": "ExpressionStatement",
                  "src": "2061:64:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25434,
                          "name": "_target",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25407,
                          "src": "2139:7:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 25437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2158:1:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2150:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25435,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2150:7:52",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2150:10:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2139:21:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5461726765742063616e206e6f74206265207a65726f2061646472657373",
                        "id": 25440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2162:32:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_79e3ae8cf904acf86c42cb710902b9b3d5f684c9dd4b48739cf59a076ef28b8c",
                          "typeString": "literal_string \"Target can not be zero address\""
                        },
                        "value": "Target can not be zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_79e3ae8cf904acf86c42cb710902b9b3d5f684c9dd4b48739cf59a076ef28b8c",
                          "typeString": "literal_string \"Target can not be zero address\""
                        }
                      ],
                      "id": 25433,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2131:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2131:64:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25442,
                  "nodeType": "ExpressionStatement",
                  "src": "2131:64:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25444,
                        "name": "_avatar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25405,
                        "src": "2211:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25443,
                      "name": "setAvatar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22409,
                      "src": "2201:9:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 25445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2201:18:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25446,
                  "nodeType": "ExpressionStatement",
                  "src": "2201:18:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25448,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25407,
                        "src": "2235:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25447,
                      "name": "setTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22431,
                      "src": "2225:9:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 25449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2225:18:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25450,
                  "nodeType": "ExpressionStatement",
                  "src": "2225:18:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25452,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25403,
                        "src": "2268:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25451,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19865,
                      "src": "2250:17:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 25453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2250:25:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25454,
                  "nodeType": "ExpressionStatement",
                  "src": "2250:25:52"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25456,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2304:3:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 25457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2304:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25458,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25403,
                        "src": "2316:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25459,
                        "name": "_avatar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25405,
                        "src": "2324:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25460,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25407,
                        "src": "2333:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25455,
                      "name": "ZkSigModuleSetup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25325,
                      "src": "2287:16:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,address)"
                      }
                    },
                    "id": 25461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2287:54:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25462,
                  "nodeType": "EmitStatement",
                  "src": "2282:59:52"
                }
              ]
            },
            "baseFunctions": [
              22616
            ],
            "functionSelector": "a4f9edbf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1827:5:52",
            "overrides": {
              "id": 25400,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1865:8:52"
            },
            "parameters": {
              "id": 25399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25398,
                  "mutability": "mutable",
                  "name": "initParams",
                  "nameLocation": "1846:10:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 25464,
                  "src": "1833:23:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25397,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1833:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1832:25:52"
            },
            "returnParameters": {
              "id": 25401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1874:0:52"
            },
            "scope": 25685,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25502,
            "nodeType": "FunctionDefinition",
            "src": "2350:210:52",
            "nodes": [],
            "body": {
              "id": 25501,
              "nodeType": "Block",
              "src": "2387:173:52",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    25471
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25471,
                      "mutability": "mutable",
                      "name": "owners",
                      "nameLocation": "2410:6:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 25501,
                      "src": "2393:23:52",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 25469,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2393:7:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 25470,
                        "nodeType": "ArrayTypeName",
                        "src": "2393:9:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25475,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 25472,
                        "name": "safe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25293,
                        "src": "2419:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GnosisSafe_$26865",
                          "typeString": "contract GnosisSafe"
                        }
                      },
                      "id": 25473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getOwners",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27921,
                      "src": "2419:14:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (address[] memory)"
                      }
                    },
                    "id": 25474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2419:16:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2393:42:52"
                },
                {
                  "assignments": [
                    25477
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25477,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "2449:3:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 25501,
                      "src": "2441:11:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25476,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2441:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25480,
                  "initialValue": {
                    "expression": {
                      "id": 25478,
                      "name": "owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25471,
                      "src": "2455:6:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "id": 25479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2455:13:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2441:27:52"
                },
                {
                  "body": {
                    "id": 25499,
                    "nodeType": "Block",
                    "src": "2509:47:52",
                    "statements": [
                      {
                        "expression": {
                          "id": 25497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 25491,
                              "name": "possibleMember",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25307,
                              "src": "2517:14:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 25495,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 25492,
                                "name": "owners",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25471,
                                "src": "2532:6:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 25494,
                              "indexExpression": {
                                "id": 25493,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25482,
                                "src": "2539:1:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2532:9:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2517:25:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 25496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2545:4:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2517:32:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 25498,
                        "nodeType": "ExpressionStatement",
                        "src": "2517:32:52"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 25485,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25482,
                      "src": "2494:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 25486,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25477,
                      "src": "2498:3:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2494:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25500,
                  "initializationExpression": {
                    "assignments": [
                      25482
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 25482,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2487:1:52",
                        "nodeType": "VariableDeclaration",
                        "scope": 25500,
                        "src": "2479:9:52",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 25481,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2479:7:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 25484,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 25483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2491:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2479:13:52"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 25489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2503:4:52",
                      "subExpression": {
                        "id": 25488,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25482,
                        "src": "2503:1:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 25490,
                    "nodeType": "ExpressionStatement",
                    "src": "2503:4:52"
                  },
                  "nodeType": "ForStatement",
                  "src": "2474:82:52"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAllowedOwners",
            "nameLocation": "2359:16:52",
            "parameters": {
              "id": 25465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2375:2:52"
            },
            "returnParameters": {
              "id": 25466,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2387:0:52"
            },
            "scope": 25685,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 25510,
            "nodeType": "FunctionDefinition",
            "src": "2631:78:52",
            "nodes": [],
            "body": {
              "id": 25509,
              "nodeType": "Block",
              "src": "2682:27:52",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 25507,
                    "name": "threshold",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 25297,
                    "src": "2695:9:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 25506,
                  "id": 25508,
                  "nodeType": "Return",
                  "src": "2688:16:52"
                }
              ]
            },
            "functionSelector": "e75235b8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getThreshold",
            "nameLocation": "2640:12:52",
            "parameters": {
              "id": 25503,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2652:2:52"
            },
            "returnParameters": {
              "id": 25506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25505,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25510,
                  "src": "2673:7:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25504,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2673:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2672:9:52"
            },
            "scope": 25685,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25548,
            "nodeType": "FunctionDefinition",
            "src": "2713:368:52",
            "nodes": [],
            "body": {
              "id": 25547,
              "nodeType": "Block",
              "src": "2790:291:52",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 25522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 25517,
                        "name": "possibleMember",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25307,
                        "src": "2839:14:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 25520,
                      "indexExpression": {
                        "expression": {
                          "id": 25518,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2854:3:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 25519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2854:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2839:26:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 25521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2869:4:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2839:34:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 25545,
                    "nodeType": "Block",
                    "src": "3038:39:52",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 25542,
                            "name": "SignerAddFailed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25327,
                            "src": "3053:15:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 25543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3053:17:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25544,
                        "nodeType": "RevertStatement",
                        "src": "3046:24:52"
                      }
                    ]
                  },
                  "id": 25546,
                  "nodeType": "IfStatement",
                  "src": "2835:242:52",
                  "trueBody": {
                    "id": 25541,
                    "nodeType": "Block",
                    "src": "2875:157:52",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 25526,
                              "name": "groupId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25295,
                              "src": "2903:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 25527,
                              "name": "identityCommitment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25512,
                              "src": "2912:18:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 25523,
                              "name": "semaphore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25290,
                              "src": "2883:9:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISemaphore_$20183",
                                "typeString": "contract ISemaphore"
                              }
                            },
                            "id": 25525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addMember",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20143,
                            "src": "2883:19:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 25528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2883:48:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25529,
                        "nodeType": "ExpressionStatement",
                        "src": "2883:48:52"
                      },
                      {
                        "expression": {
                          "id": 25534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 25530,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25303,
                              "src": "2939:5:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                                "typeString": "mapping(uint256 => bytes32)"
                              }
                            },
                            "id": 25532,
                            "indexExpression": {
                              "id": 25531,
                              "name": "identityCommitment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25512,
                              "src": "2945:18:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2939:25:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 25533,
                            "name": "username",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25514,
                            "src": "2967:8:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "2939:36:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 25535,
                        "nodeType": "ExpressionStatement",
                        "src": "2939:36:52"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 25537,
                              "name": "identityCommitment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25512,
                              "src": "2996:18:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 25538,
                              "name": "username",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25514,
                              "src": "3016:8:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 25536,
                            "name": "NewUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25315,
                            "src": "2988:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,bytes32)"
                            }
                          },
                          "id": 25539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2988:37:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25540,
                        "nodeType": "EmitStatement",
                        "src": "2983:42:52"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "7a943918",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "joinAsSigner",
            "nameLocation": "2722:12:52",
            "parameters": {
              "id": 25515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25512,
                  "mutability": "mutable",
                  "name": "identityCommitment",
                  "nameLocation": "2743:18:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 25548,
                  "src": "2735:26:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25511,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2735:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25514,
                  "mutability": "mutable",
                  "name": "username",
                  "nameLocation": "2771:8:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 25548,
                  "src": "2763:16:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25513,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2763:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2734:46:52"
            },
            "returnParameters": {
              "id": 25516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2790:0:52"
            },
            "scope": 25685,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25684,
            "nodeType": "FunctionDefinition",
            "src": "3657:1330:52",
            "nodes": [],
            "body": {
              "id": 25683,
              "nodeType": "Block",
              "src": "4070:917:52",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    25576
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25576,
                      "mutability": "mutable",
                      "name": "merkleRootLen",
                      "nameLocation": "4206:13:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 25683,
                      "src": "4198:21:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25575,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4198:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25579,
                  "initialValue": {
                    "expression": {
                      "id": 25577,
                      "name": "merkleTreeRoots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25561,
                      "src": "4222:15:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 25578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "4222:22:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4198:46:52"
                },
                {
                  "assignments": [
                    25581
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25581,
                      "mutability": "mutable",
                      "name": "nullifierLen",
                      "nameLocation": "4258:12:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 25683,
                      "src": "4250:20:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25580,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4250:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25584,
                  "initialValue": {
                    "expression": {
                      "id": 25582,
                      "name": "nullifierHashes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25564,
                      "src": "4273:15:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 25583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "4273:22:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4250:45:52"
                },
                {
                  "assignments": [
                    25586
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25586,
                      "mutability": "mutable",
                      "name": "proofLen",
                      "nameLocation": "4309:8:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 25683,
                      "src": "4301:16:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25585,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4301:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25589,
                  "initialValue": {
                    "expression": {
                      "id": 25587,
                      "name": "proofs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25569,
                      "src": "4320:6:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$8_calldata_ptr_$dyn_calldata_ptr",
                        "typeString": "uint256[8] calldata[] calldata"
                      }
                    },
                    "id": 25588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "4320:13:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4301:32:52"
                },
                {
                  "assignments": [
                    25591
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25591,
                      "mutability": "mutable",
                      "name": "votesLen",
                      "nameLocation": "4347:8:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 25683,
                      "src": "4339:16:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25590,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4339:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25594,
                  "initialValue": {
                    "expression": {
                      "id": 25592,
                      "name": "votes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25572,
                      "src": "4358:5:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "id": 25593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "4358:12:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4339:31:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25596,
                          "name": "merkleRootLen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25576,
                          "src": "4385:13:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 25597,
                          "name": "nullifierLen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25581,
                          "src": "4402:12:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4385:29:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77726f6e67206e756d206f66206d65726b6c6520726f6f74732f6e756c73",
                        "id": 25599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4416:32:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78530a36c5158028b998dfda0ce6d5f5c7f4a2a94eeee7325f76ec21dfd3b0f1",
                          "typeString": "literal_string \"wrong num of merkle roots/nuls\""
                        },
                        "value": "wrong num of merkle roots/nuls"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78530a36c5158028b998dfda0ce6d5f5c7f4a2a94eeee7325f76ec21dfd3b0f1",
                          "typeString": "literal_string \"wrong num of merkle roots/nuls\""
                        }
                      ],
                      "id": 25595,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4377:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4377:72:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25601,
                  "nodeType": "ExpressionStatement",
                  "src": "4377:72:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25603,
                          "name": "nullifierLen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25581,
                          "src": "4463:12:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 25604,
                          "name": "proofLen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25586,
                          "src": "4479:8:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4463:24:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77726f6e67206e756d206f662070726f6f66732f6e756c73",
                        "id": 25606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4489:26:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea1d7c045bfe246dd7375177f879634349fe925111256a35c86068266da8f04a",
                          "typeString": "literal_string \"wrong num of proofs/nuls\""
                        },
                        "value": "wrong num of proofs/nuls"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea1d7c045bfe246dd7375177f879634349fe925111256a35c86068266da8f04a",
                          "typeString": "literal_string \"wrong num of proofs/nuls\""
                        }
                      ],
                      "id": 25602,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4455:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4455:61:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25608,
                  "nodeType": "ExpressionStatement",
                  "src": "4455:61:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25610,
                          "name": "proofLen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25586,
                          "src": "4530:8:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 25611,
                          "name": "votesLen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25591,
                          "src": "4542:8:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4530:20:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77726f6e67206e756d206f66206d65726b6c652070726f6f66732f766f746573",
                        "id": 25613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4552:34:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7cf09c3d6a0bd23069b8c119ac3333b134d2482e4e2bbe57d40ffaa965e6da6a",
                          "typeString": "literal_string \"wrong num of merkle proofs/votes\""
                        },
                        "value": "wrong num of merkle proofs/votes"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7cf09c3d6a0bd23069b8c119ac3333b134d2482e4e2bbe57d40ffaa965e6da6a",
                          "typeString": "literal_string \"wrong num of merkle proofs/votes\""
                        }
                      ],
                      "id": 25609,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4522:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4522:65:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25615,
                  "nodeType": "ExpressionStatement",
                  "src": "4522:65:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25617,
                          "name": "merkleRootLen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25576,
                          "src": "4601:13:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 25618,
                          "name": "threshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25297,
                          "src": "4618:9:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4601:26:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468726573686f6c64206e6f74206d6574",
                        "id": 25620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4629:19:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf3248cd3b85634c72797c8e96ba416a76cd6aca6352d61e410d78c5ac405a90",
                          "typeString": "literal_string \"threshold not met\""
                        },
                        "value": "threshold not met"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf3248cd3b85634c72797c8e96ba416a76cd6aca6352d61e410d78c5ac405a90",
                          "typeString": "literal_string \"threshold not met\""
                        }
                      ],
                      "id": 25616,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4593:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4593:56:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25622,
                  "nodeType": "ExpressionStatement",
                  "src": "4593:56:52"
                },
                {
                  "body": {
                    "id": 25664,
                    "nodeType": "Block",
                    "src": "4697:173:52",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 25641,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 25636,
                                      "name": "votes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25572,
                                      "src": "4721:5:52",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                        "typeString": "bytes32[] memory"
                                      }
                                    },
                                    "id": 25638,
                                    "indexExpression": {
                                      "id": 25637,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25624,
                                      "src": "4727:1:52",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4721:8:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 25635,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4713:7:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 25634,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4713:7:52",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 25639,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4713:17:52",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 25640,
                                "name": "nonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25299,
                                "src": "4734:5:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4713:26:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "77726f6e675f6e6f6e6365",
                              "id": 25642,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4741:13:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8e745604715ca3959f4d817ea2a60729638d4ade636f21158c7b0df89717bcdf",
                                "typeString": "literal_string \"wrong_nonce\""
                              },
                              "value": "wrong_nonce"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8e745604715ca3959f4d817ea2a60729638d4ade636f21158c7b0df89717bcdf",
                                "typeString": "literal_string \"wrong_nonce\""
                              }
                            ],
                            "id": 25633,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4705:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 25643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4705:50:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25644,
                        "nodeType": "ExpressionStatement",
                        "src": "4705:50:52"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 25648,
                              "name": "groupId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25295,
                              "src": "4785:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 25649,
                                "name": "merkleTreeRoots",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25561,
                                "src": "4794:15:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 25651,
                              "indexExpression": {
                                "id": 25650,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25624,
                                "src": "4810:1:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4794:18:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 25652,
                                "name": "votes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25572,
                                "src": "4814:5:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              "id": 25654,
                              "indexExpression": {
                                "id": 25653,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25624,
                                "src": "4820:1:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4814:8:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 25655,
                                "name": "nullifierHashes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25564,
                                "src": "4824:15:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 25657,
                              "indexExpression": {
                                "id": 25656,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25624,
                                "src": "4840:1:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4824:18:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 25658,
                              "name": "groupId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25295,
                              "src": "4844:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 25659,
                                "name": "proofs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25569,
                                "src": "4853:6:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_array$_t_uint256_$8_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "uint256[8] calldata[] calldata"
                                }
                              },
                              "id": 25661,
                              "indexExpression": {
                                "id": 25660,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25624,
                                "src": "4860:1:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4853:9:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                                "typeString": "uint256[8] calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                                "typeString": "uint256[8] calldata"
                              }
                            ],
                            "expression": {
                              "id": 25645,
                              "name": "semaphore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25290,
                              "src": "4763:9:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISemaphore_$20183",
                                "typeString": "contract ISemaphore"
                              }
                            },
                            "id": 25647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifyProof",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20101,
                            "src": "4763:21:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$8_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,bytes32,uint256,uint256,uint256[8] memory) external"
                            }
                          },
                          "id": 25662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4763:100:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25663,
                        "nodeType": "ExpressionStatement",
                        "src": "4763:100:52"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 25627,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25624,
                      "src": "4677:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 25628,
                      "name": "votesLen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25591,
                      "src": "4681:8:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4677:12:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25665,
                  "initializationExpression": {
                    "assignments": [
                      25624
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 25624,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4670:1:52",
                        "nodeType": "VariableDeclaration",
                        "scope": 25665,
                        "src": "4662:9:52",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 25623,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4662:7:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 25626,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 25625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4674:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4662:13:52"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 25631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4691:4:52",
                      "subExpression": {
                        "id": 25630,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25624,
                        "src": "4691:1:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 25632,
                    "nodeType": "ExpressionStatement",
                    "src": "4691:4:52"
                  },
                  "nodeType": "ForStatement",
                  "src": "4657:213:52"
                },
                {
                  "expression": {
                    "id": 25668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25666,
                      "name": "nonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25299,
                      "src": "4876:5:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 25667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4885:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4876:10:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25669,
                  "nodeType": "ExpressionStatement",
                  "src": "4876:10:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25672,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25551,
                            "src": "4906:2:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 25673,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25553,
                            "src": "4910:5:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 25674,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25555,
                            "src": "4917:4:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 25675,
                            "name": "operation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25558,
                            "src": "4923:9:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Operation_$25911",
                              "typeString": "enum Enum.Operation"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_enum$_Operation_$25911",
                              "typeString": "enum Enum.Operation"
                            }
                          ],
                          "id": 25671,
                          "name": "exec",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22515,
                          "src": "4901:4:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$25911_$returns$_t_bool_$",
                            "typeString": "function (address,uint256,bytes memory,enum Enum.Operation) returns (bool)"
                          }
                        },
                        "id": 25676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4901:32:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6f64756c65207472616e73616374696f6e206661696c6564",
                        "id": 25677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4935:27:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fcc89b4a3af79a471c47bbd1eacf11a1b777271ccdeea63671c054adaf850afa",
                          "typeString": "literal_string \"Module transaction failed\""
                        },
                        "value": "Module transaction failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fcc89b4a3af79a471c47bbd1eacf11a1b777271ccdeea63671c054adaf850afa",
                          "typeString": "literal_string \"Module transaction failed\""
                        }
                      ],
                      "id": 25670,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4893:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4893:70:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25679,
                  "nodeType": "ExpressionStatement",
                  "src": "4893:70:52"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 25680,
                      "name": "NewTxn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25309,
                      "src": "4974:6:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 25681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4974:8:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25682,
                  "nodeType": "EmitStatement",
                  "src": "4969:13:52"
                }
              ]
            },
            "documentation": {
              "id": 25549,
              "nodeType": "StructuredDocumentation",
              "src": "3085:569:52",
              "text": "@dev Executes a transaction initated by the AMB\n @param to Target of the transaction that should be executed\n @param value Wei value of the transaction that should be executed\n @param data Data of the transaction that should be executed\n @param operation Operation (Call or Delegatecall) of the transaction that should be executed\n @param merkleTreeRoots merkle tree root\n @param nullifierHashes nullifier hash\n @param proofs We pass in the proof, verify it, and then execute \n @param votes the vote on the given transaction"
            },
            "functionSelector": "4d02da10",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeTransaction",
            "nameLocation": "3666:18:52",
            "parameters": {
              "id": 25573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25551,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3698:2:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 25684,
                  "src": "3690:10:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25550,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3690:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25553,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "3861:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 25684,
                  "src": "3853:13:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25552,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3853:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25555,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3885:4:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 25684,
                  "src": "3872:17:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25554,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3872:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25558,
                  "mutability": "mutable",
                  "name": "operation",
                  "nameLocation": "3910:9:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 25684,
                  "src": "3895:24:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Operation_$25911",
                    "typeString": "enum Enum.Operation"
                  },
                  "typeName": {
                    "id": 25557,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25556,
                      "name": "Enum.Operation",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25911,
                      "src": "3895:14:52"
                    },
                    "referencedDeclaration": 25911,
                    "src": "3895:14:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Operation_$25911",
                      "typeString": "enum Enum.Operation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25561,
                  "mutability": "mutable",
                  "name": "merkleTreeRoots",
                  "nameLocation": "3943:15:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 25684,
                  "src": "3926:32:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 25559,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3926:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 25560,
                    "nodeType": "ArrayTypeName",
                    "src": "3926:9:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25564,
                  "mutability": "mutable",
                  "name": "nullifierHashes",
                  "nameLocation": "3981:15:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 25684,
                  "src": "3964:32:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 25562,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3964:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 25563,
                    "nodeType": "ArrayTypeName",
                    "src": "3964:9:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25569,
                  "mutability": "mutable",
                  "name": "proofs",
                  "nameLocation": "4024:6:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 25684,
                  "src": "4002:28:52",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$8_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "uint256[8][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 25565,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4002:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 25567,
                      "length": {
                        "hexValue": "38",
                        "id": 25566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4010:1:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        },
                        "value": "8"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "4002:10:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$8_storage_ptr",
                        "typeString": "uint256[8]"
                      }
                    },
                    "id": 25568,
                    "nodeType": "ArrayTypeName",
                    "src": "4002:12:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$8_storage_$dyn_storage_ptr",
                      "typeString": "uint256[8][]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25572,
                  "mutability": "mutable",
                  "name": "votes",
                  "nameLocation": "4053:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 25684,
                  "src": "4036:22:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 25570,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "4036:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 25571,
                    "nodeType": "ArrayTypeName",
                    "src": "4036:9:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3684:378:52"
            },
            "returnParameters": {
              "id": 25574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4070:0:52"
            },
            "scope": 25685,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25284,
              "name": "Module",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22606,
              "src": "293:6:52"
            },
            "id": 25285,
            "nodeType": "InheritanceSpecifier",
            "src": "293:6:52"
          },
          {
            "baseName": {
              "id": 25286,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20018,
              "src": "301:15:52"
            },
            "id": 25287,
            "nodeType": "InheritanceSpecifier",
            "src": "301:15:52"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          25685,
          20018,
          22606,
          22750,
          22617,
          19889,
          19978,
          19935
        ],
        "name": "PrivateModule",
        "nameLocation": "276:13:52",
        "scope": 25686,
        "usedErrors": [
          22701,
          25327
        ]
      }
    ]
  },
  "id": 52
}

export default privateModule;